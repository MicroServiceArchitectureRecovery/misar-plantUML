<?xml version="1.0" encoding="UTF-8"?>
<PIM:RootPIM
    xmi:version="2.0"
    xmlns:xmi="http://www.omg.org/XMI"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:PIM="http://localhost/mdd/PIM.ecore"
    xsi:schemaLocation="http://localhost/mdd/PIM.ecore ../model/PIM.ecore">
  <architecture
      ArchitectureName="TrainTicket">
    <microservices
        xsi:type="PIM:InfrastructureMicroservice"
        MicroserviceName="redis">
      <container
          ContainerName="redis">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:redis,ImageField:redis,GeneratesLogs:false]</GeneratingPSM>
      </container>
      <components
          xsi:type="PIM:InfrastructureServerComponent"
          Category="Development_Pattern_Data_Cache"
          Technology="Redis">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:redis,ImageField:redis,GeneratesLogs:false]</GeneratingPSM>
      </components>
      <interface
          ServerURL="[http|https]://redis:&lt;port-number>">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:redis,ImageField:redis,GeneratesLogs:false]</GeneratingPSM>
      </interface>
      <GeneratingPSM>DockerContainerDefinition[ContainerName:redis,ImageField:redis,GeneratesLogs:false]</GeneratingPSM>
    </microservices>
    <microservices
        MicroserviceName="ts-ui-dashboard">
      <container
          ContainerName="ts-ui-dashboard">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-ui-dashboard,ImageField:openresty/openresty:trusty,GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-ui-dashboard]</GeneratingPSM>
      </container>
      <interface
          ServerURL="[http|https]://ts-ui-dashboard:&lt;port-number>">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-ui-dashboard,ImageField:openresty/openresty:trusty,GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-ui-dashboard]</GeneratingPSM>
      </interface>
      <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-ui-dashboard,ImageField:openresty/openresty:trusty,GeneratesLogs:false]</GeneratingPSM>
      <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-ui-dashboard]</GeneratingPSM>
    </microservices>
    <microservices
        xsi:type="PIM:InfrastructureMicroservice"
        MicroserviceName="ts-auth-service">
      <container
          ContainerName="ts-auth-service">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-auth-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-auth-service]</GeneratingPSM>
      </container>
      <components
          Category="Observability_Pattern_Application_Metrics_Generation"
          Technology="Actuator"
          Environment="COMPILE">
        <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
      </components>
      <components
          xsi:type="PIM:InfrastructureClientComponent"
          Category="Development_Pattern_Data_Persistence"
          Technology="MongoDB"
          Environment="COMPILE">
        <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-data-mongodb]</GeneratingPSM>
        <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.host]</GeneratingPSM>
      </components>
      <components
          Category="Observability_Pattern_Application_Metrics_Logging"
          Technology="Slf4j"
          Environment="COMPILE">
        <GeneratingPSM>JavaAnnotation[AnnotationName:Slf4j]</GeneratingPSM>
      </components>
      <components
          Category="Security_Pattern_Web_Security"
          Technology="Spring Security"
          Environment="COMPILE">
        <GeneratingPSM>JavaAnnotation[AnnotationName:EnableWebSecurity]</GeneratingPSM>
      </components>
      <components
          xsi:type="PIM:InfrastructureServerComponent"
          Category="Security_Pattern_Authorization_and_Authentication"
          Technology="Spring Security"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:authenticate()]</GeneratingPSM>
      </components>
      <interface
          ServerURL="[http|https]://ts-auth-service:&lt;port-number>">
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/health">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;status&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;details&quot;:{&quot;type&quot;:&quot;object&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/info">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;git&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;branch&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;commit&quot;:{&quot;type&quot;:&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;id&quot;:{&quot;type&quot;:&quot;string&quot;}}}}},&quot;build&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;artifact&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;group&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;name&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;version&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;}}}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/metrics">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;Datacenter&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Node&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;wan&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;NodeMeta&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;somekey&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;Service&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Service&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Tags&quot;:{&quot;type&quot;:&quot;array&quot;,&quot;items&quot;:{&quot;type&quot;:&quot;string&quot;}},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;wan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}}}},&quot;Meta&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;Port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;Check&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;SkipNodeUpdate&quot;:{&quot;type&quot;:&quot;boolean&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /actuator/shutdown">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /actuator/restart">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /api/v1/users/login">
          <operation
              OperationName="getToken()"
              OperationDescription="Receives a request of type: (BasicAuthDto) and returns a response message of type: (Response)">
            <GeneratingPSM>JavaAnnotation[AnnotationName:PostMapping]</GeneratingPSM>
          </operation>
          <messages
              MessageType="REQUEST"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;serialVersionUID&quot;:{&quot;type&quot;:&quot;integer&quot;},&quot;username&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;password&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;verificationCode&quot;:{&quot;type&quot;:&quot;string&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>JavaAnnotation[AnnotationName:PostMapping]</GeneratingPSM>
          </messages>
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;status&quot;:{&quot;type&quot;:&quot;integer&quot;},&quot;msg&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;data&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;serialVersionUID&quot;:{&quot;type&quot;:&quot;integer&quot;},&quot;userId&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;username&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;token&quot;:{&quot;type&quot;:&quot;string&quot;}}}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>JavaAnnotation[AnnotationName:PostMapping]</GeneratingPSM>
          </messages>
          <GeneratingPSM>JavaAnnotation[AnnotationName:PostMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /api/v1/auth">
          <operation
              OperationName="createDefaultUser()"
              OperationDescription="Receives a request of type: (AuthDto) and returns a response message of type: (Response)">
            <GeneratingPSM>JavaAnnotation[AnnotationName:PostMapping]</GeneratingPSM>
          </operation>
          <messages
              MessageType="REQUEST"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;userId&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;username&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;password&quot;:{&quot;type&quot;:&quot;string&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>JavaAnnotation[AnnotationName:PostMapping]</GeneratingPSM>
          </messages>
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;status&quot;:{&quot;type&quot;:&quot;integer&quot;},&quot;msg&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;data&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;userId&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;username&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;password&quot;:{&quot;type&quot;:&quot;string&quot;}}}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>JavaAnnotation[AnnotationName:PostMapping]</GeneratingPSM>
          </messages>
          <GeneratingPSM>JavaAnnotation[AnnotationName:PostMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/users/hello">
          <operation
              OperationName="getHello()"
              OperationDescription="Returns a response message of type: (Object)">
            <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
          </operation>
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;}"
              SchemaFormat="JSON">
            <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
          </messages>
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="DELETE /api/v1/users/{userId}">
          <operation
              OperationName="deleteUserById()"
              OperationDescription="Returns a response message of type: (Response)">
            <GeneratingPSM>JavaAnnotation[AnnotationName:DeleteMapping]</GeneratingPSM>
          </operation>
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;status&quot;:{&quot;type&quot;:&quot;integer&quot;},&quot;msg&quot;:{&quot;type&quot;:&quot;string&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>JavaAnnotation[AnnotationName:DeleteMapping]</GeneratingPSM>
          </messages>
          <GeneratingPSM>JavaAnnotation[AnnotationName:DeleteMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/users">
          <operation
              OperationName="getAllUser()"
              OperationDescription="Returns a response message of type: (List&lt;User>)">
            <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
          </operation>
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;status&quot;:{&quot;type&quot;:&quot;integer&quot;},&quot;msg&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;data&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;userId&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;username&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;password&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;roles&quot;:{&quot;type&quot;:&quot;array&quot;,&quot;items&quot;:{&quot;type&quot;:&quot;string&quot;}}}}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
          </messages>
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/auth/hello">
          <operation
              OperationName="getHello()"
              OperationDescription="Returns a response message of type: (String)">
            <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
          </operation>
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;string&quot;}"
              SchemaFormat="JSON">
            <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
          </messages>
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-auth-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-auth-service]</GeneratingPSM>
      </interface>
      <dependencies
          ProviderName="ts-auth-mongo"
          ProviderDestination=""
          Environment="COMPILE">
        <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.host]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="getToken()"
          ProviderName="ts-verification-code-service"
          ProviderDestination="Endpoint[RequestURI:GET /api/v1/verifycode/verify/{verifyCode}]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-auth-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
      <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-auth-service]</GeneratingPSM>
    </microservices>
    <microservices
        xsi:type="PIM:InfrastructureMicroservice"
        MicroserviceName="ts-auth-mongo">
      <container
          ContainerName="ts-auth-mongo">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-auth-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
      </container>
      <components
          xsi:type="PIM:InfrastructureServerComponent"
          Category="Development_Pattern_Data_Persistence"
          Technology="MongoDB">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-auth-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
      </components>
      <interface
          ServerURL="[http|https]://ts-auth-mongo:&lt;port-number>">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-auth-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
      </interface>
      <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-auth-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
    </microservices>
    <microservices
        xsi:type="PIM:FunctionalMicroservice"
        MicroserviceName="ts-order-service">
      <container
          ContainerName="ts-order-service">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-order-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-order-service]</GeneratingPSM>
      </container>
      <components
          Category="Observability_Pattern_Application_Metrics_Generation"
          Technology="Actuator"
          Environment="COMPILE">
        <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
      </components>
      <components
          xsi:type="PIM:InfrastructureClientComponent"
          Category="Development_Pattern_Data_Persistence"
          Technology="MongoDB"
          Environment="COMPILE">
        <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-data-mongodb]</GeneratingPSM>
        <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.host]</GeneratingPSM>
      </components>
      <components
          Category="Security_Pattern_Web_Security"
          Technology="Spring Security"
          Environment="COMPILE">
        <GeneratingPSM>JavaAnnotation[AnnotationName:EnableWebSecurity]</GeneratingPSM>
      </components>
      <components
          Category="Observability_Pattern_Application_Metrics_Logging"
          Technology="Slf4j"
          Environment="COMPILE">
        <GeneratingPSM>JavaAnnotation[AnnotationName:Slf4j]</GeneratingPSM>
      </components>
      <interface
          ServerURL="[http|https]://ts-order-service:&lt;port-number>">
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/health">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;status&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;details&quot;:{&quot;type&quot;:&quot;object&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/info">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;git&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;branch&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;commit&quot;:{&quot;type&quot;:&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;id&quot;:{&quot;type&quot;:&quot;string&quot;}}}}},&quot;build&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;artifact&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;group&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;name&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;version&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;}}}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/metrics">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;Datacenter&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Node&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;wan&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;NodeMeta&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;somekey&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;Service&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Service&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Tags&quot;:{&quot;type&quot;:&quot;array&quot;,&quot;items&quot;:{&quot;type&quot;:&quot;string&quot;}},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;wan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}}}},&quot;Meta&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;Port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;Check&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;SkipNodeUpdate&quot;:{&quot;type&quot;:&quot;boolean&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /actuator/shutdown">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /actuator/restart">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /api/v1/orderservice/order">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>JavaAnnotation[AnnotationName:PostMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /api/v1/orderservice/order/tickets">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>JavaAnnotation[AnnotationName:PostMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="DELETE /api/v1/orderservice/order/{orderId}">
          <GeneratingPSM>JavaAnnotation[AnnotationName:DeleteMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/orderservice/welcome">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/orderservice/order/orderPay/{orderId}">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/orderservice/order/status/{orderId}/{status}">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/orderservice/order/{orderId}">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/orderservice/order/price/{orderId}">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="PUT /api/v1/orderservice/order/admin">
          <GeneratingPSM>JavaAnnotation[AnnotationName:PutMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/orderservice/order/security/{checkDate}/{accountId}">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /api/v1/orderservice/order/refresh">
          <GeneratingPSM>JavaAnnotation[AnnotationName:PostMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="PUT /api/v1/orderservice/order">
          <GeneratingPSM>JavaAnnotation[AnnotationName:PutMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /api/v1/orderservice/order/admin">
          <GeneratingPSM>JavaAnnotation[AnnotationName:PostMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/orderservice/order">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /api/v1/orderservice/order/query">
          <GeneratingPSM>JavaAnnotation[AnnotationName:PostMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/orderservice/order/{travelDate}/{trainNumber}">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-order-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-order-service]</GeneratingPSM>
      </interface>
      <dependencies
          ProviderName="ts-order-mongo"
          ProviderDestination=""
          Environment="COMPILE">
        <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.host]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="queryForStationId()"
          ProviderName="ts-station-service"
          ProviderDestination="Endpoint[RequestURI:POST /api/v1/stationservice/stations/namelist&quot;]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-order-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
      <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-order-service]</GeneratingPSM>
    </microservices>
    <microservices
        xsi:type="PIM:InfrastructureMicroservice"
        MicroserviceName="ts-order-mongo">
      <container
          ContainerName="ts-order-mongo">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-order-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
      </container>
      <components
          xsi:type="PIM:InfrastructureServerComponent"
          Category="Development_Pattern_Data_Persistence"
          Technology="MongoDB">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-order-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
      </components>
      <interface
          ServerURL="[http|https]://ts-order-mongo:&lt;port-number>">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-order-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
      </interface>
      <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-order-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
    </microservices>
    <microservices
        xsi:type="PIM:FunctionalMicroservice"
        MicroserviceName="ts-user-service">
      <container
          ContainerName="ts-user-service">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-user-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-user-service]</GeneratingPSM>
      </container>
      <components
          Category="Observability_Pattern_Application_Metrics_Generation"
          Technology="Actuator"
          Environment="COMPILE">
        <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
      </components>
      <components
          xsi:type="PIM:InfrastructureClientComponent"
          Category="Development_Pattern_Data_Persistence"
          Technology="MongoDB"
          Environment="COMPILE">
        <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-data-mongodb]</GeneratingPSM>
        <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.host]</GeneratingPSM>
      </components>
      <components
          Category="Observability_Pattern_Application_Metrics_Logging"
          Technology="Slf4j"
          Environment="COMPILE">
        <GeneratingPSM>JavaAnnotation[AnnotationName:Slf4j]</GeneratingPSM>
      </components>
      <components
          Category="Security_Pattern_Web_Security"
          Technology="Spring Security"
          Environment="COMPILE">
        <GeneratingPSM>JavaAnnotation[AnnotationName:EnableWebSecurity]</GeneratingPSM>
      </components>
      <interface
          ServerURL="[http|https]://ts-user-service:&lt;port-number>">
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/health">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;status&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;details&quot;:{&quot;type&quot;:&quot;object&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/info">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;git&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;branch&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;commit&quot;:{&quot;type&quot;:&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;id&quot;:{&quot;type&quot;:&quot;string&quot;}}}}},&quot;build&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;artifact&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;group&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;name&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;version&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;}}}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/metrics">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;Datacenter&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Node&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;wan&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;NodeMeta&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;somekey&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;Service&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Service&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Tags&quot;:{&quot;type&quot;:&quot;array&quot;,&quot;items&quot;:{&quot;type&quot;:&quot;string&quot;}},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;wan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}}}},&quot;Meta&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;Port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;Check&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;SkipNodeUpdate&quot;:{&quot;type&quot;:&quot;boolean&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /actuator/shutdown">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /actuator/restart">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="PUT /api/v1/userservice/users">
          <GeneratingPSM>JavaAnnotation[AnnotationName:PutMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/userservice/users/hello">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/userservice/users/{userName}">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="DELETE /api/v1/userservice/users/{userId}">
          <GeneratingPSM>JavaAnnotation[AnnotationName:DeleteMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/userservice/users/id/{userId}">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/userservice/users">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /api/v1/userservice/users/register">
          <GeneratingPSM>JavaAnnotation[AnnotationName:PostMapping]</GeneratingPSM>
        </destinations>
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-user-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-user-service]</GeneratingPSM>
      </interface>
      <dependencies
          ProviderName="ts-user-mongo"
          ProviderDestination=""
          Environment="COMPILE">
        <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.host]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="deleteUserAuth()"
          ProviderName="ts-auth-service"
          ProviderDestination="Endpoint[RequestURI:DELETE /api/v1/users/&quot;]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="createDefaultAuthUser()"
          ProviderName="ts-auth-service"
          ProviderDestination="Endpoint[RequestURI:POST /api/v1/auth&quot;]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-user-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
      <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-user-service]</GeneratingPSM>
    </microservices>
    <microservices
        xsi:type="PIM:InfrastructureMicroservice"
        MicroserviceName="ts-user-mongo">
      <container
          ContainerName="ts-user-mongo">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-user-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
      </container>
      <components
          xsi:type="PIM:InfrastructureServerComponent"
          Category="Development_Pattern_Data_Persistence"
          Technology="MongoDB">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-user-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
      </components>
      <interface
          ServerURL="[http|https]://ts-user-mongo:&lt;port-number>">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-user-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
      </interface>
      <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-user-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
    </microservices>
    <microservices
        xsi:type="PIM:FunctionalMicroservice"
        MicroserviceName="ts-verification-code-service">
      <container
          ContainerName="ts-verification-code-service">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-verification-code-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-verification-code-service]</GeneratingPSM>
      </container>
      <components
          Category="Observability_Pattern_Application_Metrics_Generation"
          Technology="Actuator"
          Environment="COMPILE">
        <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
      </components>
      <components
          Category="Security_Pattern_Web_Security"
          Technology="Spring Security"
          Environment="COMPILE">
        <GeneratingPSM>JavaAnnotation[AnnotationName:EnableWebSecurity]</GeneratingPSM>
      </components>
      <components
          Category="Observability_Pattern_Application_Metrics_Logging"
          Technology="Slf4j"
          Environment="COMPILE">
        <GeneratingPSM>JavaAnnotation[AnnotationName:Slf4j]</GeneratingPSM>
      </components>
      <interface
          ServerURL="[http|https]://ts-verification-code-service:&lt;port-number>">
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/health">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;status&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;details&quot;:{&quot;type&quot;:&quot;object&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/info">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;git&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;branch&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;commit&quot;:{&quot;type&quot;:&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;id&quot;:{&quot;type&quot;:&quot;string&quot;}}}}},&quot;build&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;artifact&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;group&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;name&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;version&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;}}}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/metrics">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;Datacenter&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Node&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;wan&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;NodeMeta&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;somekey&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;Service&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Service&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Tags&quot;:{&quot;type&quot;:&quot;array&quot;,&quot;items&quot;:{&quot;type&quot;:&quot;string&quot;}},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;wan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}}}},&quot;Meta&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;Port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;Check&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;SkipNodeUpdate&quot;:{&quot;type&quot;:&quot;boolean&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /actuator/shutdown">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /actuator/restart">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/verifycode/verify/{verifyCode}">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/verifycode/generate">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-verification-code-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-verification-code-service]</GeneratingPSM>
      </interface>
      <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-verification-code-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
      <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-verification-code-service]</GeneratingPSM>
    </microservices>
    <microservices
        xsi:type="PIM:InfrastructureMicroservice"
        MicroserviceName="ts-account-mongo">
      <container
          ContainerName="ts-account-mongo">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-account-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
      </container>
      <components
          xsi:type="PIM:InfrastructureServerComponent"
          Category="Development_Pattern_Data_Persistence"
          Technology="MongoDB">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-account-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
      </components>
      <interface
          ServerURL="[http|https]://ts-account-mongo:&lt;port-number>">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-account-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
      </interface>
      <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-account-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
    </microservices>
    <microservices
        xsi:type="PIM:FunctionalMicroservice"
        MicroserviceName="ts-route-service">
      <container
          ContainerName="ts-route-service">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-route-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-route-service]</GeneratingPSM>
      </container>
      <components
          Category="Observability_Pattern_Application_Metrics_Generation"
          Technology="Actuator"
          Environment="COMPILE">
        <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
      </components>
      <components
          xsi:type="PIM:InfrastructureClientComponent"
          Category="Development_Pattern_Data_Persistence"
          Technology="MongoDB"
          Environment="COMPILE">
        <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-data-mongodb]</GeneratingPSM>
        <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.host]</GeneratingPSM>
      </components>
      <components
          Category="Security_Pattern_Web_Security"
          Technology="Spring Security"
          Environment="COMPILE">
        <GeneratingPSM>JavaAnnotation[AnnotationName:EnableWebSecurity]</GeneratingPSM>
      </components>
      <interface
          ServerURL="[http|https]://ts-route-service:&lt;port-number>">
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/health">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;status&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;details&quot;:{&quot;type&quot;:&quot;object&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/info">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;git&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;branch&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;commit&quot;:{&quot;type&quot;:&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;id&quot;:{&quot;type&quot;:&quot;string&quot;}}}}},&quot;build&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;artifact&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;group&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;name&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;version&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;}}}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/metrics">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;Datacenter&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Node&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;wan&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;NodeMeta&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;somekey&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;Service&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Service&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Tags&quot;:{&quot;type&quot;:&quot;array&quot;,&quot;items&quot;:{&quot;type&quot;:&quot;string&quot;}},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;wan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}}}},&quot;Meta&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;Port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;Check&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;SkipNodeUpdate&quot;:{&quot;type&quot;:&quot;boolean&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /actuator/shutdown">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /actuator/restart">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/routeservice/routes">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/routeservice/welcome">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /api/v1/routeservice/routes">
          <GeneratingPSM>JavaAnnotation[AnnotationName:PostMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/routeservice/routes/{startId}/{terminalId}">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="DELETE /api/v1/routeservice/routes/{routeId}">
          <GeneratingPSM>JavaAnnotation[AnnotationName:DeleteMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/routeservice/routes/{routeId}">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-route-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-route-service]</GeneratingPSM>
      </interface>
      <dependencies
          ProviderName="ts-route-mongo"
          ProviderDestination=""
          Environment="COMPILE">
        <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.host]</GeneratingPSM>
      </dependencies>
      <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-route-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
      <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-route-service]</GeneratingPSM>
    </microservices>
    <microservices
        xsi:type="PIM:InfrastructureMicroservice"
        MicroserviceName="ts-route-mongo">
      <container
          ContainerName="ts-route-mongo">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-route-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
      </container>
      <components
          xsi:type="PIM:InfrastructureServerComponent"
          Category="Development_Pattern_Data_Persistence"
          Technology="MongoDB">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-route-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
      </components>
      <interface
          ServerURL="[http|https]://ts-route-mongo:&lt;port-number>">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-route-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
      </interface>
      <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-route-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
    </microservices>
    <microservices
        xsi:type="PIM:FunctionalMicroservice"
        MicroserviceName="ts-contacts-service">
      <container
          ContainerName="ts-contacts-service">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-contacts-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-contacts-service]</GeneratingPSM>
      </container>
      <components
          Category="Observability_Pattern_Application_Metrics_Generation"
          Technology="Actuator"
          Environment="COMPILE">
        <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
      </components>
      <components
          xsi:type="PIM:InfrastructureClientComponent"
          Category="Development_Pattern_Data_Persistence"
          Technology="MongoDB"
          Environment="COMPILE">
        <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-data-mongodb]</GeneratingPSM>
        <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.host]</GeneratingPSM>
      </components>
      <components
          Category="Observability_Pattern_Application_Metrics_Logging"
          Technology="Slf4j"
          Environment="COMPILE">
        <GeneratingPSM>JavaAnnotation[AnnotationName:Slf4j]</GeneratingPSM>
      </components>
      <components
          Category="Security_Pattern_Web_Security"
          Technology="Spring Security"
          Environment="COMPILE">
        <GeneratingPSM>JavaAnnotation[AnnotationName:EnableWebSecurity]</GeneratingPSM>
      </components>
      <interface
          ServerURL="[http|https]://ts-contacts-service:&lt;port-number>">
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/health">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;status&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;details&quot;:{&quot;type&quot;:&quot;object&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/info">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;git&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;branch&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;commit&quot;:{&quot;type&quot;:&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;id&quot;:{&quot;type&quot;:&quot;string&quot;}}}}},&quot;build&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;artifact&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;group&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;name&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;version&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;}}}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/metrics">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;Datacenter&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Node&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;wan&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;NodeMeta&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;somekey&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;Service&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Service&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Tags&quot;:{&quot;type&quot;:&quot;array&quot;,&quot;items&quot;:{&quot;type&quot;:&quot;string&quot;}},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;wan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}}}},&quot;Meta&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;Port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;Check&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;SkipNodeUpdate&quot;:{&quot;type&quot;:&quot;boolean&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /actuator/shutdown">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /actuator/restart">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="DELETE api/v1/contactservice/contacts/{contactsId}">
          <GeneratingPSM>JavaAnnotation[AnnotationName:DeleteMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET api/v1/contactservice/contacts">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="PUT api/v1/contactservice/contacts">
          <GeneratingPSM>JavaAnnotation[AnnotationName:PutMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET api/v1/contactservice/contacts/welcome">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST api/v1/contactservice/contacts">
          <GeneratingPSM>JavaAnnotation[AnnotationName:PostMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET api/v1/contactservice/contacts/{id}">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST api/v1/contactservice/contacts/admin">
          <GeneratingPSM>JavaAnnotation[AnnotationName:PostMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET api/v1/contactservice/contacts/account/{accountId}">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-contacts-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-contacts-service]</GeneratingPSM>
      </interface>
      <dependencies
          ProviderName="ts-contacts-mongo"
          ProviderDestination=""
          Environment="COMPILE">
        <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.host]</GeneratingPSM>
      </dependencies>
      <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-contacts-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
      <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-contacts-service]</GeneratingPSM>
    </microservices>
    <microservices
        xsi:type="PIM:InfrastructureMicroservice"
        MicroserviceName="ts-contacts-mongo">
      <container
          ContainerName="ts-contacts-mongo">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-contacts-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
      </container>
      <components
          xsi:type="PIM:InfrastructureServerComponent"
          Category="Development_Pattern_Data_Persistence"
          Technology="MongoDB">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-contacts-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
      </components>
      <interface
          ServerURL="[http|https]://ts-contacts-mongo:&lt;port-number>">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-contacts-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
      </interface>
      <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-contacts-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
    </microservices>
    <microservices
        xsi:type="PIM:FunctionalMicroservice"
        MicroserviceName="ts-order-other-service">
      <container
          ContainerName="ts-order-other-service">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-order-other-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-order-other-service]</GeneratingPSM>
      </container>
      <components
          Category="Observability_Pattern_Application_Metrics_Generation"
          Technology="Actuator"
          Environment="COMPILE">
        <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
      </components>
      <components
          xsi:type="PIM:InfrastructureClientComponent"
          Category="Development_Pattern_Data_Persistence"
          Technology="MongoDB"
          Environment="COMPILE">
        <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-data-mongodb]</GeneratingPSM>
        <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.host]</GeneratingPSM>
      </components>
      <components
          Category="Security_Pattern_Web_Security"
          Technology="Spring Security"
          Environment="COMPILE">
        <GeneratingPSM>JavaAnnotation[AnnotationName:EnableWebSecurity]</GeneratingPSM>
      </components>
      <components
          Category="Observability_Pattern_Application_Metrics_Logging"
          Technology="Slf4j"
          Environment="COMPILE">
        <GeneratingPSM>JavaAnnotation[AnnotationName:Slf4j]</GeneratingPSM>
      </components>
      <interface
          ServerURL="[http|https]://ts-order-other-service:&lt;port-number>">
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/health">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;status&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;details&quot;:{&quot;type&quot;:&quot;object&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/info">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;git&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;branch&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;commit&quot;:{&quot;type&quot;:&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;id&quot;:{&quot;type&quot;:&quot;string&quot;}}}}},&quot;build&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;artifact&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;group&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;name&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;version&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;}}}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/metrics">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;Datacenter&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Node&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;wan&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;NodeMeta&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;somekey&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;Service&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Service&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Tags&quot;:{&quot;type&quot;:&quot;array&quot;,&quot;items&quot;:{&quot;type&quot;:&quot;string&quot;}},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;wan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}}}},&quot;Meta&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;Port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;Check&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;SkipNodeUpdate&quot;:{&quot;type&quot;:&quot;boolean&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /actuator/shutdown">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /actuator/restart">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/orderOtherService/orderOther/security/{checkDate}/{accountId}">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/orderOtherService/orderOther/price/{orderId}">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="DELETE /api/v1/orderOtherService/orderOther/{orderId}">
          <GeneratingPSM>JavaAnnotation[AnnotationName:DeleteMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="PUT /api/v1/orderOtherService/orderOther/admin">
          <GeneratingPSM>JavaAnnotation[AnnotationName:PutMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/orderOtherService/orderOther/orderPay/{orderId}">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/orderOtherService/orderOther/status/{orderId}/{status}">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /api/v1/orderOtherService/orderOther">
          <GeneratingPSM>JavaAnnotation[AnnotationName:PostMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /api/v1/orderOtherService/orderOther/admin">
          <GeneratingPSM>JavaAnnotation[AnnotationName:PostMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/orderOtherService/orderOther/{orderId}">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/orderOtherService/orderOther">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /api/v1/orderOtherService/orderOther/tickets">
          <GeneratingPSM>JavaAnnotation[AnnotationName:PostMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /api/v1/orderOtherService/orderOther/query">
          <GeneratingPSM>JavaAnnotation[AnnotationName:PostMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/orderOtherService/orderOther/{travelDate}/{trainNumber}">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="PUT /api/v1/orderOtherService/orderOther">
          <GeneratingPSM>JavaAnnotation[AnnotationName:PutMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/orderOtherService/welcome">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /api/v1/orderOtherService/orderOther/refresh">
          <GeneratingPSM>JavaAnnotation[AnnotationName:PostMapping]</GeneratingPSM>
        </destinations>
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-order-other-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-order-other-service]</GeneratingPSM>
      </interface>
      <dependencies
          ProviderName="ts-order-other-mongo"
          ProviderDestination=""
          Environment="COMPILE">
        <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.host]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="queryForStationId()"
          ProviderName="ts-station-service"
          ProviderDestination="Endpoint[RequestURI:POST /api/v1/stationservice/stations/namelist&quot;]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-order-other-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
      <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-order-other-service]</GeneratingPSM>
    </microservices>
    <microservices
        xsi:type="PIM:InfrastructureMicroservice"
        MicroserviceName="ts-order-other-mongo">
      <container
          ContainerName="ts-order-other-mongo">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-order-other-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
      </container>
      <components
          xsi:type="PIM:InfrastructureServerComponent"
          Category="Development_Pattern_Data_Persistence"
          Technology="MongoDB">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-order-other-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
      </components>
      <interface
          ServerURL="[http|https]://ts-order-other-mongo:&lt;port-number>">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-order-other-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
      </interface>
      <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-order-other-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
    </microservices>
    <microservices
        xsi:type="PIM:FunctionalMicroservice"
        MicroserviceName="ts-config-service">
      <container
          ContainerName="ts-config-service">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-config-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-config-service]</GeneratingPSM>
      </container>
      <components
          Category="Observability_Pattern_Application_Metrics_Generation"
          Technology="Actuator"
          Environment="COMPILE">
        <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
      </components>
      <components
          xsi:type="PIM:InfrastructureClientComponent"
          Category="Development_Pattern_Data_Persistence"
          Technology="MongoDB"
          Environment="COMPILE">
        <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-data-mongodb]</GeneratingPSM>
      </components>
      <components
          Category="Security_Pattern_Web_Security"
          Technology="Spring Security"
          Environment="COMPILE">
        <GeneratingPSM>JavaAnnotation[AnnotationName:EnableWebSecurity]</GeneratingPSM>
      </components>
      <interface
          ServerURL="[http|https]://ts-config-service:&lt;port-number>">
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/health">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;status&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;details&quot;:{&quot;type&quot;:&quot;object&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/info">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;git&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;branch&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;commit&quot;:{&quot;type&quot;:&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;id&quot;:{&quot;type&quot;:&quot;string&quot;}}}}},&quot;build&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;artifact&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;group&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;name&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;version&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;}}}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/metrics">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;Datacenter&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Node&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;wan&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;NodeMeta&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;somekey&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;Service&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Service&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Tags&quot;:{&quot;type&quot;:&quot;array&quot;,&quot;items&quot;:{&quot;type&quot;:&quot;string&quot;}},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;wan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}}}},&quot;Meta&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;Port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;Check&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;SkipNodeUpdate&quot;:{&quot;type&quot;:&quot;boolean&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /actuator/shutdown">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /actuator/restart">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET api/v1/configservice/configs">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST api/v1/configservice/configs">
          <GeneratingPSM>JavaAnnotation[AnnotationName:PostMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET api/v1/configservice/welcome">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET api/v1/configservice/configs/{configName}">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="PUT api/v1/configservice/configs">
          <GeneratingPSM>JavaAnnotation[AnnotationName:PutMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="DELETE api/v1/configservice/configs/{configName}">
          <GeneratingPSM>JavaAnnotation[AnnotationName:DeleteMapping]</GeneratingPSM>
        </destinations>
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-config-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-config-service]</GeneratingPSM>
      </interface>
      <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-config-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
      <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-config-service]</GeneratingPSM>
    </microservices>
    <microservices
        xsi:type="PIM:InfrastructureMicroservice"
        MicroserviceName="ts-config-mongo">
      <container
          ContainerName="ts-config-mongo">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-config-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
      </container>
      <components
          xsi:type="PIM:InfrastructureServerComponent"
          Category="Development_Pattern_Data_Persistence"
          Technology="MongoDB">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-config-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
      </components>
      <interface
          ServerURL="[http|https]://ts-config-mongo:&lt;port-number>">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-config-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
      </interface>
      <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-config-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
    </microservices>
    <microservices
        xsi:type="PIM:FunctionalMicroservice"
        MicroserviceName="ts-station-service">
      <container
          ContainerName="ts-station-service">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-station-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-station-service]</GeneratingPSM>
      </container>
      <components
          Category="Observability_Pattern_Application_Metrics_Generation"
          Technology="Actuator"
          Environment="COMPILE">
        <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
      </components>
      <components
          xsi:type="PIM:InfrastructureClientComponent"
          Category="Development_Pattern_Data_Persistence"
          Technology="MongoDB"
          Environment="COMPILE">
        <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-data-mongodb]</GeneratingPSM>
        <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.host]</GeneratingPSM>
      </components>
      <components
          Category="Security_Pattern_Web_Security"
          Technology="Spring Security"
          Environment="COMPILE">
        <GeneratingPSM>JavaAnnotation[AnnotationName:EnableWebSecurity]</GeneratingPSM>
      </components>
      <interface
          ServerURL="[http|https]://ts-station-service:&lt;port-number>">
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/health">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;status&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;details&quot;:{&quot;type&quot;:&quot;object&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/info">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;git&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;branch&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;commit&quot;:{&quot;type&quot;:&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;id&quot;:{&quot;type&quot;:&quot;string&quot;}}}}},&quot;build&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;artifact&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;group&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;name&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;version&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;}}}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/metrics">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;Datacenter&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Node&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;wan&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;NodeMeta&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;somekey&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;Service&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Service&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Tags&quot;:{&quot;type&quot;:&quot;array&quot;,&quot;items&quot;:{&quot;type&quot;:&quot;string&quot;}},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;wan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}}}},&quot;Meta&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;Port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;Check&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;SkipNodeUpdate&quot;:{&quot;type&quot;:&quot;boolean&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /actuator/shutdown">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /actuator/restart">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /api/v1/stationservice/stations">
          <GeneratingPSM>JavaAnnotation[AnnotationName:PostMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/stationservice/welcome">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="PUT /api/v1/stationservice/stations">
          <GeneratingPSM>JavaAnnotation[AnnotationName:PutMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/stationservice/stations/name/{stationIdForName}">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /api/v1/stationservice/stations/namelist">
          <GeneratingPSM>JavaAnnotation[AnnotationName:PostMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="DELETE /api/v1/stationservice/stations">
          <GeneratingPSM>JavaAnnotation[AnnotationName:DeleteMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/stationservice/stations/id/{stationNameForId}">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /api/v1/stationservice/stations/idlist">
          <GeneratingPSM>JavaAnnotation[AnnotationName:PostMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/stationservice/stations">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-station-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-station-service]</GeneratingPSM>
      </interface>
      <dependencies
          ProviderName="ts-station-mongo"
          ProviderDestination=""
          Environment="COMPILE">
        <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.host]</GeneratingPSM>
      </dependencies>
      <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-station-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
      <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-station-service]</GeneratingPSM>
    </microservices>
    <microservices
        xsi:type="PIM:InfrastructureMicroservice"
        MicroserviceName="ts-station-mongo">
      <container
          ContainerName="ts-station-mongo">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-station-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
      </container>
      <components
          xsi:type="PIM:InfrastructureServerComponent"
          Category="Development_Pattern_Data_Persistence"
          Technology="MongoDB">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-station-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
      </components>
      <interface
          ServerURL="[http|https]://ts-station-mongo:&lt;port-number>">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-station-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
      </interface>
      <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-station-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
    </microservices>
    <microservices
        xsi:type="PIM:FunctionalMicroservice"
        MicroserviceName="ts-train-service">
      <container
          ContainerName="ts-train-service">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-train-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-train-service]</GeneratingPSM>
      </container>
      <components
          Category="Observability_Pattern_Application_Metrics_Generation"
          Technology="Actuator"
          Environment="COMPILE">
        <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
      </components>
      <components
          xsi:type="PIM:InfrastructureClientComponent"
          Category="Development_Pattern_Data_Persistence"
          Technology="MongoDB"
          Environment="COMPILE">
        <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-data-mongodb]</GeneratingPSM>
        <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.host]</GeneratingPSM>
      </components>
      <components
          Category="Security_Pattern_Web_Security"
          Technology="Spring Security"
          Environment="COMPILE">
        <GeneratingPSM>JavaAnnotation[AnnotationName:EnableWebSecurity]</GeneratingPSM>
      </components>
      <interface
          ServerURL="[http|https]://ts-train-service:&lt;port-number>">
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/health">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;status&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;details&quot;:{&quot;type&quot;:&quot;object&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/info">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;git&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;branch&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;commit&quot;:{&quot;type&quot;:&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;id&quot;:{&quot;type&quot;:&quot;string&quot;}}}}},&quot;build&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;artifact&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;group&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;name&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;version&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;}}}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/metrics">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;Datacenter&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Node&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;wan&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;NodeMeta&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;somekey&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;Service&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Service&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Tags&quot;:{&quot;type&quot;:&quot;array&quot;,&quot;items&quot;:{&quot;type&quot;:&quot;string&quot;}},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;wan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}}}},&quot;Meta&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;Port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;Check&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;SkipNodeUpdate&quot;:{&quot;type&quot;:&quot;boolean&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /actuator/shutdown">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /actuator/restart">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/trainservice/trains">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/trainservice/trains/welcome">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /api/v1/trainservice/trains">
          <GeneratingPSM>JavaAnnotation[AnnotationName:PostMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="DELETE /api/v1/trainservice/trains/{id}">
          <GeneratingPSM>JavaAnnotation[AnnotationName:DeleteMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="PUT /api/v1/trainservice/trains">
          <GeneratingPSM>JavaAnnotation[AnnotationName:PutMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/trainservice/trains/{id}">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-train-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-train-service]</GeneratingPSM>
      </interface>
      <dependencies
          ProviderName="ts-train-mongo"
          ProviderDestination=""
          Environment="COMPILE">
        <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.host]</GeneratingPSM>
      </dependencies>
      <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-train-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
      <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-train-service]</GeneratingPSM>
    </microservices>
    <microservices
        xsi:type="PIM:InfrastructureMicroservice"
        MicroserviceName="ts-train-mongo">
      <container
          ContainerName="ts-train-mongo">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-train-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
      </container>
      <components
          xsi:type="PIM:InfrastructureServerComponent"
          Category="Development_Pattern_Data_Persistence"
          Technology="MongoDB">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-train-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
      </components>
      <interface
          ServerURL="[http|https]://ts-train-mongo:&lt;port-number>">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-train-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
      </interface>
      <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-train-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
    </microservices>
    <microservices
        xsi:type="PIM:FunctionalMicroservice"
        MicroserviceName="ts-travel-service">
      <container
          ContainerName="ts-travel-service">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-travel-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-travel-service]</GeneratingPSM>
      </container>
      <components
          Category="Observability_Pattern_Application_Metrics_Generation"
          Technology="Actuator"
          Environment="COMPILE">
        <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
      </components>
      <components
          xsi:type="PIM:InfrastructureClientComponent"
          Category="Development_Pattern_Data_Persistence"
          Technology="MongoDB"
          Environment="COMPILE">
        <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-data-mongodb]</GeneratingPSM>
        <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.host]</GeneratingPSM>
      </components>
      <components
          Category="Security_Pattern_Web_Security"
          Technology="Spring Security"
          Environment="COMPILE">
        <GeneratingPSM>JavaAnnotation[AnnotationName:EnableWebSecurity]</GeneratingPSM>
      </components>
      <interface
          ServerURL="[http|https]://ts-travel-service:&lt;port-number>">
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/health">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;status&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;details&quot;:{&quot;type&quot;:&quot;object&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/info">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;git&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;branch&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;commit&quot;:{&quot;type&quot;:&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;id&quot;:{&quot;type&quot;:&quot;string&quot;}}}}},&quot;build&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;artifact&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;group&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;name&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;version&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;}}}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/metrics">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;Datacenter&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Node&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;wan&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;NodeMeta&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;somekey&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;Service&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Service&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Tags&quot;:{&quot;type&quot;:&quot;array&quot;,&quot;items&quot;:{&quot;type&quot;:&quot;string&quot;}},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;wan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}}}},&quot;Meta&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;Port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;Check&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;SkipNodeUpdate&quot;:{&quot;type&quot;:&quot;boolean&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /actuator/shutdown">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /actuator/restart">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /api/v1/travelservice/trips/routes">
          <GeneratingPSM>JavaAnnotation[AnnotationName:PostMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/travelservice/welcome">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/travelservice/trips">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/travelservice/train_types/{tripId}">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/travelservice/routes/{tripId}">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /api/v1/travelservice/trip_detail">
          <GeneratingPSM>JavaAnnotation[AnnotationName:PostMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /api/v1/travelservice/trips/left">
          <GeneratingPSM>JavaAnnotation[AnnotationName:PostMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/travelservice/trips/{tripId}">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/travelservice/admin_trip">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="DELETE /api/v1/travelservice/trips/{tripId}">
          <GeneratingPSM>JavaAnnotation[AnnotationName:DeleteMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /api/v1/travelservice/trips">
          <GeneratingPSM>JavaAnnotation[AnnotationName:PostMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="PUT /api/v1/travelservice/trips">
          <GeneratingPSM>JavaAnnotation[AnnotationName:PutMapping]</GeneratingPSM>
        </destinations>
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-travel-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-travel-service]</GeneratingPSM>
      </interface>
      <dependencies
          ProviderName="ts-travel-mongo"
          ProviderDestination=""
          Environment="COMPILE">
        <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.host]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="getRestTicketNumber()"
          ProviderName="ts-seat-service"
          ProviderDestination="Endpoint[RequestURI:POST /api/v1/seatservice/seats/left_tickets&quot;]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="queryForStationId()"
          ProviderName="ts-ticketinfo-service"
          ProviderDestination="Endpoint[RequestURI:GET /api/v1/ticketinfoservice/ticketinfo/]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="getTickets()"
          ProviderName="ts-order-service"
          ProviderDestination="Endpoint[RequestURI:GET /api/v1/orderservice/order/]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="getRouteByRouteId()"
          ProviderName="ts-route-service"
          ProviderDestination="Endpoint[RequestURI:GET /api/v1/routeservice/routes/]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="getTrainType()"
          ProviderName="ts-train-service"
          ProviderDestination="Endpoint[RequestURI:GET /api/v1/trainservice/trains/]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="getTickets()"
          ProviderName="ts-ticketinfo-service"
          ProviderDestination="Endpoint[RequestURI:POST /api/v1/ticketinfoservice/ticketinfo&quot;]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-travel-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
      <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-travel-service]</GeneratingPSM>
    </microservices>
    <microservices
        xsi:type="PIM:InfrastructureMicroservice"
        MicroserviceName="ts-travel-mongo">
      <container
          ContainerName="ts-travel-mongo">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-travel-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
      </container>
      <components
          xsi:type="PIM:InfrastructureServerComponent"
          Category="Development_Pattern_Data_Persistence"
          Technology="MongoDB">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-travel-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
      </components>
      <interface
          ServerURL="[http|https]://ts-travel-mongo:&lt;port-number>">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-travel-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
      </interface>
      <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-travel-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
    </microservices>
    <microservices
        xsi:type="PIM:FunctionalMicroservice"
        MicroserviceName="ts-travel2-service">
      <container
          ContainerName="ts-travel2-service">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-travel2-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-travel2-service]</GeneratingPSM>
      </container>
      <components
          Category="Observability_Pattern_Application_Metrics_Generation"
          Technology="Actuator"
          Environment="COMPILE">
        <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
      </components>
      <components
          xsi:type="PIM:InfrastructureClientComponent"
          Category="Development_Pattern_Data_Persistence"
          Technology="MongoDB"
          Environment="COMPILE">
        <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-data-mongodb]</GeneratingPSM>
        <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.host]</GeneratingPSM>
      </components>
      <components
          Category="Security_Pattern_Web_Security"
          Technology="Spring Security"
          Environment="COMPILE">
        <GeneratingPSM>JavaAnnotation[AnnotationName:EnableWebSecurity]</GeneratingPSM>
      </components>
      <interface
          ServerURL="[http|https]://ts-travel2-service:&lt;port-number>">
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/health">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;status&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;details&quot;:{&quot;type&quot;:&quot;object&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/info">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;git&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;branch&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;commit&quot;:{&quot;type&quot;:&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;id&quot;:{&quot;type&quot;:&quot;string&quot;}}}}},&quot;build&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;artifact&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;group&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;name&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;version&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;}}}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/metrics">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;Datacenter&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Node&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;wan&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;NodeMeta&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;somekey&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;Service&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Service&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Tags&quot;:{&quot;type&quot;:&quot;array&quot;,&quot;items&quot;:{&quot;type&quot;:&quot;string&quot;}},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;wan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}}}},&quot;Meta&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;Port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;Check&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;SkipNodeUpdate&quot;:{&quot;type&quot;:&quot;boolean&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /actuator/shutdown">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /actuator/restart">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/travel2service/trips">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/travel2service/train_types/{tripId}">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /api/v1/travel2service/trips/routes">
          <GeneratingPSM>JavaAnnotation[AnnotationName:PostMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/travel2service/routes/{tripId}">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="PUT /api/v1/travel2service/trips">
          <GeneratingPSM>JavaAnnotation[AnnotationName:PutMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/travel2service/welcome">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/travel2service/admin_trip">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /api/v1/travel2service/trip_detail">
          <GeneratingPSM>JavaAnnotation[AnnotationName:PostMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="DELETE /api/v1/travel2service/trips/{tripId}">
          <GeneratingPSM>JavaAnnotation[AnnotationName:DeleteMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /api/v1/travel2service/trips">
          <GeneratingPSM>JavaAnnotation[AnnotationName:PostMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /api/v1/travel2service/trips/left">
          <GeneratingPSM>JavaAnnotation[AnnotationName:PostMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/travel2service/trips/{tripId}">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-travel2-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-travel2-service]</GeneratingPSM>
      </interface>
      <dependencies
          ProviderName="ts-travel2-mongo"
          ProviderDestination=""
          Environment="COMPILE">
        <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.host]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="queryForStationId()"
          ProviderName="ts-ticketinfo-service"
          ProviderDestination="Endpoint[RequestURI:GET /api/v1/ticketinfoservice/ticketinfo/]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="getRouteByRouteId()"
          ProviderName="ts-route-service"
          ProviderDestination="Endpoint[RequestURI:GET /api/v1/routeservice/routes/]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="getRestTicketNumber()"
          ProviderName="ts-seat-service"
          ProviderDestination="Endpoint[RequestURI:POST /api/v1/seatservice/seats/left_tickets&quot;]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="getTickets()"
          ProviderName="ts-ticketinfo-service"
          ProviderDestination="Endpoint[RequestURI:POST /api/v1/ticketinfoservice/ticketinfo&quot;]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="getTickets()"
          ProviderName=""
          ProviderDestination="Endpoint[RequestURI:GET ]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="getTrainType()"
          ProviderName="ts-train-service"
          ProviderDestination="Endpoint[RequestURI:GET /api/v1/trainservice/trains/]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-travel2-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
      <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-travel2-service]</GeneratingPSM>
    </microservices>
    <microservices
        xsi:type="PIM:InfrastructureMicroservice"
        MicroserviceName="ts-travel2-mongo">
      <container
          ContainerName="ts-travel2-mongo">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-travel2-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
      </container>
      <components
          xsi:type="PIM:InfrastructureServerComponent"
          Category="Development_Pattern_Data_Persistence"
          Technology="MongoDB">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-travel2-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
      </components>
      <interface
          ServerURL="[http|https]://ts-travel2-mongo:&lt;port-number>">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-travel2-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
      </interface>
      <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-travel2-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
    </microservices>
    <microservices
        xsi:type="PIM:FunctionalMicroservice"
        MicroserviceName="ts-preserve-service">
      <container
          ContainerName="ts-preserve-service">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-preserve-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-preserve-service]</GeneratingPSM>
      </container>
      <components
          Category="Observability_Pattern_Application_Metrics_Generation"
          Technology="Actuator"
          Environment="COMPILE">
        <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
      </components>
      <components
          Category="Observability_Pattern_Application_Metrics_Logging"
          Technology="Slf4j"
          Environment="COMPILE">
        <GeneratingPSM>JavaAnnotation[AnnotationName:Slf4j]</GeneratingPSM>
      </components>
      <components
          Category="Security_Pattern_Web_Security"
          Technology="Spring Security"
          Environment="COMPILE">
        <GeneratingPSM>JavaAnnotation[AnnotationName:EnableWebSecurity]</GeneratingPSM>
      </components>
      <interface
          ServerURL="[http|https]://ts-preserve-service:&lt;port-number>">
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/health">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;status&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;details&quot;:{&quot;type&quot;:&quot;object&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/info">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;git&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;branch&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;commit&quot;:{&quot;type&quot;:&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;id&quot;:{&quot;type&quot;:&quot;string&quot;}}}}},&quot;build&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;artifact&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;group&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;name&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;version&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;}}}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/metrics">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;Datacenter&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Node&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;wan&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;NodeMeta&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;somekey&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;Service&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Service&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Tags&quot;:{&quot;type&quot;:&quot;array&quot;,&quot;items&quot;:{&quot;type&quot;:&quot;string&quot;}},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;wan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}}}},&quot;Meta&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;Port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;Check&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;SkipNodeUpdate&quot;:{&quot;type&quot;:&quot;boolean&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /actuator/shutdown">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /actuator/restart">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /api/v1/preserveservice/preserve">
          <GeneratingPSM>JavaAnnotation[AnnotationName:PostMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/preserveservice/welcome">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-preserve-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-preserve-service]</GeneratingPSM>
      </interface>
      <dependencies
          ConsumerOperation="createOrder()"
          ProviderName="ts-order-service"
          ProviderDestination="Endpoint[RequestURI:POST /api/v1/orderservice/order&quot;]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="queryForStationId()"
          ProviderName="ts-station-service"
          ProviderDestination="Endpoint[RequestURI:GET /api/v1/stationservice/stations/id/]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="getAccount()"
          ProviderName="ts-user-service"
          ProviderDestination="Endpoint[RequestURI:GET /api/v1/userservice/users/id/]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="createFoodOrder()"
          ProviderName="ts-food-service"
          ProviderDestination="Endpoint[RequestURI:POST /api/v1/foodservice/orders&quot;]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="getTripAllDetailInformation()"
          ProviderName="ts-travel-service"
          ProviderDestination="Endpoint[RequestURI:POST /api/v1/travelservice/trip_detail&quot;]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="preserve()"
          ProviderName="ts-ticketinfo-service"
          ProviderDestination="Endpoint[RequestURI:POST /api/v1/ticketinfoservice/ticketinfo&quot;]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="createConsign()"
          ProviderName="ts-consign-service"
          ProviderDestination="Endpoint[RequestURI:POST /api/v1/consignservice/consigns&quot;]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="sendEmail()"
          ProviderName="ts-notification-service"
          ProviderDestination="Endpoint[RequestURI:POST /api/v1/notifyservice/notification/order_cancel_success&quot;]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="checkSecurity()"
          ProviderName="ts-security-service"
          ProviderDestination="Endpoint[RequestURI:GET /api/v1/securityservice/securityConfigs/]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="getContactsById()"
          ProviderName="ts-contacts-service"
          ProviderDestination="Endpoint[RequestURI:GET /api/v1/contactservice/contacts/]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="addAssuranceForOrder()"
          ProviderName=""
          ProviderDestination="Endpoint[RequestURI:GET ]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="dipatchSeat()"
          ProviderName="ts-seat-service"
          ProviderDestination="Endpoint[RequestURI:POST /api/v1/seatservice/seats&quot;]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-preserve-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
      <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-preserve-service]</GeneratingPSM>
    </microservices>
    <microservices
        xsi:type="PIM:FunctionalMicroservice"
        MicroserviceName="ts-preserve-other-service">
      <container
          ContainerName="ts-preserve-other-service">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-preserve-other-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-preserve-other-service]</GeneratingPSM>
      </container>
      <components
          Category="Observability_Pattern_Application_Metrics_Generation"
          Technology="Actuator"
          Environment="COMPILE">
        <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
      </components>
      <components
          Category="Security_Pattern_Web_Security"
          Technology="Spring Security"
          Environment="COMPILE">
        <GeneratingPSM>JavaAnnotation[AnnotationName:EnableWebSecurity]</GeneratingPSM>
      </components>
      <components
          Category="Observability_Pattern_Application_Metrics_Logging"
          Technology="Slf4j"
          Environment="COMPILE">
        <GeneratingPSM>JavaAnnotation[AnnotationName:Slf4j]</GeneratingPSM>
      </components>
      <interface
          ServerURL="[http|https]://ts-preserve-other-service:&lt;port-number>">
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/health">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;status&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;details&quot;:{&quot;type&quot;:&quot;object&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/info">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;git&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;branch&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;commit&quot;:{&quot;type&quot;:&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;id&quot;:{&quot;type&quot;:&quot;string&quot;}}}}},&quot;build&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;artifact&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;group&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;name&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;version&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;}}}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/metrics">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;Datacenter&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Node&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;wan&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;NodeMeta&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;somekey&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;Service&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Service&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Tags&quot;:{&quot;type&quot;:&quot;array&quot;,&quot;items&quot;:{&quot;type&quot;:&quot;string&quot;}},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;wan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}}}},&quot;Meta&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;Port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;Check&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;SkipNodeUpdate&quot;:{&quot;type&quot;:&quot;boolean&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /actuator/shutdown">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /actuator/restart">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /api/v1/preserveotherservice/preserveOther">
          <GeneratingPSM>JavaAnnotation[AnnotationName:PostMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/preserveotherservice/welcome">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-preserve-other-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-preserve-other-service]</GeneratingPSM>
      </interface>
      <dependencies
          ConsumerOperation="createFoodOrder()"
          ProviderName="ts-food-service"
          ProviderDestination="Endpoint[RequestURI:POST /api/v1/foodservice/orders&quot;]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="addAssuranceForOrder()"
          ProviderName=""
          ProviderDestination="Endpoint[RequestURI:GET ]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="queryForStationId()"
          ProviderName="ts-station-service"
          ProviderDestination="Endpoint[RequestURI:GET /api/v1/stationservice/stations/id/]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="getContactsById()"
          ProviderName="ts-contacts-service"
          ProviderDestination="Endpoint[RequestURI:GET /api/v1/contactservice/contacts/]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="createOrder()"
          ProviderName="ts-order-other-service"
          ProviderDestination="Endpoint[RequestURI:POST /api/v1/orderOtherService/orderOther&quot;]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="getAccount()"
          ProviderName="ts-user-service"
          ProviderDestination="Endpoint[RequestURI:GET /api/v1/userservice/users/id/]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="sendEmail()"
          ProviderName="ts-notification-service"
          ProviderDestination="Endpoint[RequestURI:POST /api/v1/notifyservice/notification/order_cancel_success&quot;]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="getTripAllDetailInformation()"
          ProviderName="ts-travel2-service"
          ProviderDestination="Endpoint[RequestURI:POST /api/v1/travel2service/trip_detail&quot;]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="checkSecurity()"
          ProviderName="ts-security-service"
          ProviderDestination="Endpoint[RequestURI:GET /api/v1/securityservice/securityConfigs/]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="preserve()"
          ProviderName="ts-ticketinfo-service"
          ProviderDestination="Endpoint[RequestURI:POST /api/v1/ticketinfoservice/ticketinfo&quot;]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="createConsign()"
          ProviderName="ts-consign-service"
          ProviderDestination="Endpoint[RequestURI:POST /api/v1/consignservice/consigns&quot;]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="dipatchSeat()"
          ProviderName="ts-seat-service"
          ProviderDestination="Endpoint[RequestURI:POST /api/v1/seatservice/seats&quot;]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-preserve-other-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
      <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-preserve-other-service]</GeneratingPSM>
    </microservices>
    <microservices
        xsi:type="PIM:FunctionalMicroservice"
        MicroserviceName="ts-basic-service">
      <container
          ContainerName="ts-basic-service">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-basic-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-basic-service]</GeneratingPSM>
      </container>
      <components
          Category="Observability_Pattern_Application_Metrics_Generation"
          Technology="Actuator"
          Environment="COMPILE">
        <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
      </components>
      <components
          Category="Security_Pattern_Web_Security"
          Technology="Spring Security"
          Environment="COMPILE">
        <GeneratingPSM>JavaAnnotation[AnnotationName:EnableWebSecurity]</GeneratingPSM>
      </components>
      <components
          Category="Observability_Pattern_Application_Metrics_Logging"
          Technology="Slf4j"
          Environment="COMPILE">
        <GeneratingPSM>JavaAnnotation[AnnotationName:Slf4j]</GeneratingPSM>
      </components>
      <interface
          ServerURL="[http|https]://ts-basic-service:&lt;port-number>">
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/health">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;status&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;details&quot;:{&quot;type&quot;:&quot;object&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/info">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;git&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;branch&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;commit&quot;:{&quot;type&quot;:&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;id&quot;:{&quot;type&quot;:&quot;string&quot;}}}}},&quot;build&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;artifact&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;group&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;name&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;version&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;}}}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/metrics">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;Datacenter&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Node&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;wan&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;NodeMeta&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;somekey&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;Service&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Service&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Tags&quot;:{&quot;type&quot;:&quot;array&quot;,&quot;items&quot;:{&quot;type&quot;:&quot;string&quot;}},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;wan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}}}},&quot;Meta&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;Port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;Check&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;SkipNodeUpdate&quot;:{&quot;type&quot;:&quot;boolean&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /actuator/shutdown">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /actuator/restart">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/basicservice/basic/{stationName}">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/basicservice/welcome">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /api/v1/basicservice/basic/travel">
          <GeneratingPSM>JavaAnnotation[AnnotationName:PostMapping]</GeneratingPSM>
        </destinations>
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-basic-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-basic-service]</GeneratingPSM>
      </interface>
      <dependencies
          ConsumerOperation="queryForStationId()"
          ProviderName="ts-station-service"
          ProviderDestination="Endpoint[RequestURI:GET /api/v1/stationservice/stations/id/]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="queryPriceConfigByRouteIdAndTrainType()"
          ProviderName=""
          ProviderDestination="Endpoint[RequestURI:GET ]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="getRouteByRouteId()"
          ProviderName="ts-route-service"
          ProviderDestination="Endpoint[RequestURI:GET /api/v1/routeservice/routes/]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="queryTrainType()"
          ProviderName="ts-train-service"
          ProviderDestination="Endpoint[RequestURI:GET /api/v1/trainservice/trains/]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-basic-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
      <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-basic-service]</GeneratingPSM>
    </microservices>
    <microservices
        xsi:type="PIM:FunctionalMicroservice"
        MicroserviceName="ts-ticketinfo-service">
      <container
          ContainerName="ts-ticketinfo-service">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-ticketinfo-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-ticketinfo-service]</GeneratingPSM>
      </container>
      <components
          Category="Observability_Pattern_Application_Metrics_Generation"
          Technology="Actuator"
          Environment="COMPILE">
        <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
      </components>
      <components
          Category="Security_Pattern_Web_Security"
          Technology="Spring Security"
          Environment="COMPILE">
        <GeneratingPSM>JavaAnnotation[AnnotationName:EnableWebSecurity]</GeneratingPSM>
      </components>
      <interface
          ServerURL="[http|https]://ts-ticketinfo-service:&lt;port-number>">
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/health">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;status&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;details&quot;:{&quot;type&quot;:&quot;object&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/info">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;git&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;branch&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;commit&quot;:{&quot;type&quot;:&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;id&quot;:{&quot;type&quot;:&quot;string&quot;}}}}},&quot;build&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;artifact&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;group&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;name&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;version&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;}}}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/metrics">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;Datacenter&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Node&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;wan&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;NodeMeta&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;somekey&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;Service&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Service&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Tags&quot;:{&quot;type&quot;:&quot;array&quot;,&quot;items&quot;:{&quot;type&quot;:&quot;string&quot;}},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;wan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}}}},&quot;Meta&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;Port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;Check&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;SkipNodeUpdate&quot;:{&quot;type&quot;:&quot;boolean&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /actuator/shutdown">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /actuator/restart">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/ticketinfoservice/welcome">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /api/v1/ticketinfoservice/ticketinfo">
          <GeneratingPSM>JavaAnnotation[AnnotationName:PostMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/ticketinfoservice/ticketinfo/{name}">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-ticketinfo-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-ticketinfo-service]</GeneratingPSM>
      </interface>
      <dependencies
          ConsumerOperation="queryForStationId()"
          ProviderName="ts-basic-service"
          ProviderDestination="Endpoint[RequestURI:GET /api/v1/basicservice/basic/]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="queryForTravel()"
          ProviderName="ts-basic-service"
          ProviderDestination="Endpoint[RequestURI:POST /api/v1/basicservice/basic/travel&quot;]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-ticketinfo-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
      <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-ticketinfo-service]</GeneratingPSM>
    </microservices>
    <microservices
        xsi:type="PIM:FunctionalMicroservice"
        MicroserviceName="ts-price-service">
      <container
          ContainerName="ts-price-service">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-price-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-price-service]</GeneratingPSM>
      </container>
      <components
          Category="Observability_Pattern_Application_Metrics_Generation"
          Technology="Actuator"
          Environment="COMPILE">
        <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
      </components>
      <components
          xsi:type="PIM:InfrastructureClientComponent"
          Category="Development_Pattern_Data_Persistence"
          Technology="MongoDB"
          Environment="COMPILE">
        <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-data-mongodb]</GeneratingPSM>
        <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.host]</GeneratingPSM>
      </components>
      <components
          Category="Security_Pattern_Web_Security"
          Technology="Spring Security"
          Environment="COMPILE">
        <GeneratingPSM>JavaAnnotation[AnnotationName:EnableWebSecurity]</GeneratingPSM>
      </components>
      <interface
          ServerURL="[http|https]://ts-price-service:&lt;port-number>">
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/health">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;status&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;details&quot;:{&quot;type&quot;:&quot;object&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/info">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;git&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;branch&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;commit&quot;:{&quot;type&quot;:&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;id&quot;:{&quot;type&quot;:&quot;string&quot;}}}}},&quot;build&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;artifact&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;group&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;name&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;version&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;}}}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/metrics">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;Datacenter&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Node&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;wan&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;NodeMeta&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;somekey&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;Service&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Service&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Tags&quot;:{&quot;type&quot;:&quot;array&quot;,&quot;items&quot;:{&quot;type&quot;:&quot;string&quot;}},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;wan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}}}},&quot;Meta&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;Port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;Check&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;SkipNodeUpdate&quot;:{&quot;type&quot;:&quot;boolean&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /actuator/shutdown">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /actuator/restart">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/priceservice/prices/welcome">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /api/v1/priceservice/prices">
          <GeneratingPSM>JavaAnnotation[AnnotationName:PostMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/priceservice/prices">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="DELETE /api/v1/priceservice/prices">
          <GeneratingPSM>JavaAnnotation[AnnotationName:DeleteMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="PUT /api/v1/priceservice/prices">
          <GeneratingPSM>JavaAnnotation[AnnotationName:PutMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/priceservice/prices/{routeId}/{trainType}">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-price-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-price-service]</GeneratingPSM>
      </interface>
      <dependencies
          ProviderName="ts-price-mongo"
          ProviderDestination=""
          Environment="COMPILE">
        <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.host]</GeneratingPSM>
      </dependencies>
      <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-price-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
      <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-price-service]</GeneratingPSM>
    </microservices>
    <microservices
        xsi:type="PIM:InfrastructureMicroservice"
        MicroserviceName="ts-price-mongo">
      <container
          ContainerName="ts-price-mongo">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-price-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
      </container>
      <components
          xsi:type="PIM:InfrastructureServerComponent"
          Category="Development_Pattern_Data_Persistence"
          Technology="MongoDB">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-price-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
      </components>
      <interface
          ServerURL="[http|https]://ts-price-mongo:&lt;port-number>">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-price-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
      </interface>
      <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-price-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
    </microservices>
    <microservices
        xsi:type="PIM:FunctionalMicroservice"
        MicroserviceName="ts-notification-service">
      <container
          ContainerName="ts-notification-service">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-notification-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-notification-service]</GeneratingPSM>
      </container>
      <components
          Category="Observability_Pattern_Application_Metrics_Generation"
          Technology="Actuator"
          Environment="COMPILE">
        <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
      </components>
      <components
          Category="Security_Pattern_Web_Security"
          Technology="Spring Security"
          Environment="COMPILE">
        <GeneratingPSM>JavaAnnotation[AnnotationName:EnableWebSecurity]</GeneratingPSM>
      </components>
      <interface
          ServerURL="[http|https]://ts-notification-service:&lt;port-number>">
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/health">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;status&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;details&quot;:{&quot;type&quot;:&quot;object&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/info">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;git&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;branch&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;commit&quot;:{&quot;type&quot;:&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;id&quot;:{&quot;type&quot;:&quot;string&quot;}}}}},&quot;build&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;artifact&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;group&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;name&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;version&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;}}}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/metrics">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;Datacenter&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Node&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;wan&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;NodeMeta&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;somekey&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;Service&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Service&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Tags&quot;:{&quot;type&quot;:&quot;array&quot;,&quot;items&quot;:{&quot;type&quot;:&quot;string&quot;}},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;wan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}}}},&quot;Meta&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;Port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;Check&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;SkipNodeUpdate&quot;:{&quot;type&quot;:&quot;boolean&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /actuator/shutdown">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /actuator/restart">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/notifyservice/welcome">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /api/v1/notifyservice/notification/order_changed_success">
          <GeneratingPSM>JavaAnnotation[AnnotationName:PostMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /api/v1/notifyservice/notification/order_cancel_success">
          <GeneratingPSM>JavaAnnotation[AnnotationName:PostMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /api/v1/notifyservice/notification/preserve_success">
          <GeneratingPSM>JavaAnnotation[AnnotationName:PostMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /api/v1/notifyservice/notification/order_create_success">
          <GeneratingPSM>JavaAnnotation[AnnotationName:PostMapping]</GeneratingPSM>
        </destinations>
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-notification-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-notification-service]</GeneratingPSM>
      </interface>
      <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-notification-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
      <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-notification-service]</GeneratingPSM>
    </microservices>
    <microservices
        xsi:type="PIM:FunctionalMicroservice"
        MicroserviceName="ts-security-service">
      <container
          ContainerName="ts-security-service">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-security-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-security-service]</GeneratingPSM>
      </container>
      <components
          Category="Observability_Pattern_Application_Metrics_Generation"
          Technology="Actuator"
          Environment="COMPILE">
        <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
      </components>
      <components
          xsi:type="PIM:InfrastructureClientComponent"
          Category="Development_Pattern_Data_Persistence"
          Technology="MongoDB"
          Environment="COMPILE">
        <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-data-mongodb]</GeneratingPSM>
        <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.host]</GeneratingPSM>
      </components>
      <components
          Category="Security_Pattern_Web_Security"
          Technology="Spring Security"
          Environment="COMPILE">
        <GeneratingPSM>JavaAnnotation[AnnotationName:EnableWebSecurity]</GeneratingPSM>
      </components>
      <interface
          ServerURL="[http|https]://ts-security-service:&lt;port-number>">
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/health">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;status&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;details&quot;:{&quot;type&quot;:&quot;object&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/info">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;git&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;branch&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;commit&quot;:{&quot;type&quot;:&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;id&quot;:{&quot;type&quot;:&quot;string&quot;}}}}},&quot;build&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;artifact&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;group&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;name&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;version&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;}}}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/metrics">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;Datacenter&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Node&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;wan&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;NodeMeta&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;somekey&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;Service&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Service&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Tags&quot;:{&quot;type&quot;:&quot;array&quot;,&quot;items&quot;:{&quot;type&quot;:&quot;string&quot;}},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;wan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}}}},&quot;Meta&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;Port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;Check&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;SkipNodeUpdate&quot;:{&quot;type&quot;:&quot;boolean&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /actuator/shutdown">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /actuator/restart">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/securityservice/securityConfigs">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="PUT /api/v1/securityservice/securityConfigs">
          <GeneratingPSM>JavaAnnotation[AnnotationName:PutMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /api/v1/securityservice/securityConfigs">
          <GeneratingPSM>JavaAnnotation[AnnotationName:PostMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/securityservice/welcome">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="DELETE /api/v1/securityservice/securityConfigs/{id}">
          <GeneratingPSM>JavaAnnotation[AnnotationName:DeleteMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/securityservice/securityConfigs/{accountId}">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-security-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-security-service]</GeneratingPSM>
      </interface>
      <dependencies
          ProviderName="ts-security-mongo"
          ProviderDestination=""
          Environment="COMPILE">
        <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.host]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="getSecurityOrderOtherInfoFromOrder()"
          ProviderName=""
          ProviderDestination="Endpoint[RequestURI:GET ]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-security-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
      <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-security-service]</GeneratingPSM>
    </microservices>
    <microservices
        xsi:type="PIM:InfrastructureMicroservice"
        MicroserviceName="ts-security-mongo">
      <container
          ContainerName="ts-security-mongo">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-security-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
      </container>
      <components
          xsi:type="PIM:InfrastructureServerComponent"
          Category="Development_Pattern_Data_Persistence"
          Technology="MongoDB">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-security-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
      </components>
      <interface
          ServerURL="[http|https]://ts-security-mongo:&lt;port-number>">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-security-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
      </interface>
      <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-security-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
    </microservices>
    <microservices
        xsi:type="PIM:FunctionalMicroservice"
        MicroserviceName="ts-inside-payment-service">
      <container
          ContainerName="ts-inside-payment-service">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-inside-payment-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-inside-payment-service]</GeneratingPSM>
      </container>
      <components
          Category="Observability_Pattern_Application_Metrics_Generation"
          Technology="Actuator"
          Environment="COMPILE">
        <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
      </components>
      <components
          xsi:type="PIM:InfrastructureClientComponent"
          Category="Development_Pattern_Data_Persistence"
          Technology="MongoDB"
          Environment="COMPILE">
        <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-data-mongodb]</GeneratingPSM>
        <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.host]</GeneratingPSM>
      </components>
      <components
          Category="Security_Pattern_Web_Security"
          Technology="Spring Security"
          Environment="COMPILE">
        <GeneratingPSM>JavaAnnotation[AnnotationName:EnableWebSecurity]</GeneratingPSM>
      </components>
      <interface
          ServerURL="[http|https]://ts-inside-payment-service:&lt;port-number>">
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/health">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;status&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;details&quot;:{&quot;type&quot;:&quot;object&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/info">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;git&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;branch&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;commit&quot;:{&quot;type&quot;:&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;id&quot;:{&quot;type&quot;:&quot;string&quot;}}}}},&quot;build&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;artifact&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;group&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;name&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;version&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;}}}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/metrics">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;Datacenter&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Node&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;wan&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;NodeMeta&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;somekey&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;Service&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Service&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Tags&quot;:{&quot;type&quot;:&quot;array&quot;,&quot;items&quot;:{&quot;type&quot;:&quot;string&quot;}},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;wan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}}}},&quot;Meta&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;Port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;Check&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;SkipNodeUpdate&quot;:{&quot;type&quot;:&quot;boolean&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /actuator/shutdown">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /actuator/restart">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /api/v1/inside_pay_service/inside_payment/difference">
          <GeneratingPSM>JavaAnnotation[AnnotationName:PostMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/inside_pay_service/welcome">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /api/v1/inside_pay_service/inside_payment/account">
          <GeneratingPSM>JavaAnnotation[AnnotationName:PostMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/inside_pay_service/inside_payment/money">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/inside_pay_service/inside_payment/{userId}/{money}">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/inside_pay_service/inside_payment/account">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/inside_pay_service/inside_payment/drawback/{userId}/{money}">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /api/v1/inside_pay_service/inside_payment">
          <GeneratingPSM>JavaAnnotation[AnnotationName:PostMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/inside_pay_service/inside_payment/payment">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-inside-payment-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-inside-payment-service]</GeneratingPSM>
      </interface>
      <dependencies
          ProviderName="ts-inside-payment-mongo"
          ProviderDestination=""
          Environment="COMPILE">
        <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.host]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="setOrderStatus()">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="payDifference()"
          ProviderName="ts-payment-service"
          ProviderDestination="Endpoint[RequestURI:POST /api/v1/paymentservice/payment&quot;]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="pay()">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="setOrderStatus()">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-inside-payment-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
      <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-inside-payment-service]</GeneratingPSM>
    </microservices>
    <microservices
        xsi:type="PIM:InfrastructureMicroservice"
        MicroserviceName="ts-inside-payment-mongo">
      <container
          ContainerName="ts-inside-payment-mongo">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-inside-payment-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
      </container>
      <components
          xsi:type="PIM:InfrastructureServerComponent"
          Category="Development_Pattern_Data_Persistence"
          Technology="MongoDB">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-inside-payment-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
      </components>
      <interface
          ServerURL="[http|https]://ts-inside-payment-mongo:&lt;port-number>">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-inside-payment-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
      </interface>
      <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-inside-payment-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
    </microservices>
    <microservices
        xsi:type="PIM:FunctionalMicroservice"
        MicroserviceName="ts-execute-service">
      <container
          ContainerName="ts-execute-service">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-execute-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-execute-service]</GeneratingPSM>
      </container>
      <components
          Category="Observability_Pattern_Application_Metrics_Generation"
          Technology="Actuator"
          Environment="COMPILE">
        <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
      </components>
      <components
          Category="Security_Pattern_Web_Security"
          Technology="Spring Security"
          Environment="COMPILE">
        <GeneratingPSM>JavaAnnotation[AnnotationName:EnableWebSecurity]</GeneratingPSM>
      </components>
      <interface
          ServerURL="[http|https]://ts-execute-service:&lt;port-number>">
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/health">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;status&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;details&quot;:{&quot;type&quot;:&quot;object&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/info">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;git&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;branch&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;commit&quot;:{&quot;type&quot;:&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;id&quot;:{&quot;type&quot;:&quot;string&quot;}}}}},&quot;build&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;artifact&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;group&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;name&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;version&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;}}}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/metrics">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;Datacenter&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Node&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;wan&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;NodeMeta&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;somekey&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;Service&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Service&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Tags&quot;:{&quot;type&quot;:&quot;array&quot;,&quot;items&quot;:{&quot;type&quot;:&quot;string&quot;}},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;wan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}}}},&quot;Meta&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;Port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;Check&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;SkipNodeUpdate&quot;:{&quot;type&quot;:&quot;boolean&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /actuator/shutdown">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /actuator/restart">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/executeservice/execute/collected/{orderId}">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/executeservice/welcome">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/executeservice/execute/execute/{orderId}">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-execute-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-execute-service]</GeneratingPSM>
      </interface>
      <dependencies
          ConsumerOperation="executeOrderOther()"
          ProviderName=""
          ProviderDestination="Endpoint[RequestURI:GET ]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="getOrderByIdFromOrder()"
          ProviderName="ts-order-service"
          ProviderDestination="Endpoint[RequestURI:GET /api/v1/orderservice/order/]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="getOrderByIdFromOrderOther()"
          ProviderName="ts-order-other-service"
          ProviderDestination="Endpoint[RequestURI:GET /api/v1/orderOtherService/orderOther/]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-execute-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
      <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-execute-service]</GeneratingPSM>
    </microservices>
    <microservices
        xsi:type="PIM:FunctionalMicroservice"
        MicroserviceName="ts-payment-service">
      <container
          ContainerName="ts-payment-service">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-payment-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-payment-service]</GeneratingPSM>
      </container>
      <components
          Category="Observability_Pattern_Application_Metrics_Generation"
          Technology="Actuator"
          Environment="COMPILE">
        <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
      </components>
      <components
          xsi:type="PIM:InfrastructureClientComponent"
          Category="Development_Pattern_Data_Persistence"
          Technology="MongoDB"
          Environment="COMPILE">
        <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-data-mongodb]</GeneratingPSM>
        <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.host]</GeneratingPSM>
      </components>
      <components
          Category="Security_Pattern_Web_Security"
          Technology="Spring Security"
          Environment="COMPILE">
        <GeneratingPSM>JavaAnnotation[AnnotationName:EnableWebSecurity]</GeneratingPSM>
      </components>
      <interface
          ServerURL="[http|https]://ts-payment-service:&lt;port-number>">
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/health">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;status&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;details&quot;:{&quot;type&quot;:&quot;object&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/info">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;git&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;branch&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;commit&quot;:{&quot;type&quot;:&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;id&quot;:{&quot;type&quot;:&quot;string&quot;}}}}},&quot;build&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;artifact&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;group&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;name&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;version&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;}}}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/metrics">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;Datacenter&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Node&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;wan&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;NodeMeta&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;somekey&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;Service&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Service&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Tags&quot;:{&quot;type&quot;:&quot;array&quot;,&quot;items&quot;:{&quot;type&quot;:&quot;string&quot;}},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;wan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}}}},&quot;Meta&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;Port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;Check&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;SkipNodeUpdate&quot;:{&quot;type&quot;:&quot;boolean&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /actuator/shutdown">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /actuator/restart">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/paymentservice/welcome">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /api/v1/paymentservice/payment">
          <GeneratingPSM>JavaAnnotation[AnnotationName:PostMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /api/v1/paymentservice/payment/money">
          <GeneratingPSM>JavaAnnotation[AnnotationName:PostMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/paymentservice/payment">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-payment-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-payment-service]</GeneratingPSM>
      </interface>
      <dependencies
          ProviderName="ts-payment-mongo"
          ProviderDestination=""
          Environment="COMPILE">
        <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.host]</GeneratingPSM>
      </dependencies>
      <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-payment-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
      <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-payment-service]</GeneratingPSM>
    </microservices>
    <microservices
        xsi:type="PIM:InfrastructureMicroservice"
        MicroserviceName="ts-payment-mongo">
      <container
          ContainerName="ts-payment-mongo">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-payment-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
      </container>
      <components
          xsi:type="PIM:InfrastructureServerComponent"
          Category="Development_Pattern_Data_Persistence"
          Technology="MongoDB">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-payment-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
      </components>
      <interface
          ServerURL="[http|https]://ts-payment-mongo:&lt;port-number>">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-payment-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
      </interface>
      <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-payment-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
    </microservices>
    <microservices
        xsi:type="PIM:FunctionalMicroservice"
        MicroserviceName="ts-rebook-service">
      <container
          ContainerName="ts-rebook-service">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-rebook-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-rebook-service]</GeneratingPSM>
      </container>
      <components
          Category="Observability_Pattern_Application_Metrics_Generation"
          Technology="Actuator"
          Environment="COMPILE">
        <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
      </components>
      <components
          Category="Security_Pattern_Web_Security"
          Technology="Spring Security"
          Environment="COMPILE">
        <GeneratingPSM>JavaAnnotation[AnnotationName:EnableWebSecurity]</GeneratingPSM>
      </components>
      <interface
          ServerURL="[http|https]://ts-rebook-service:&lt;port-number>">
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/health">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;status&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;details&quot;:{&quot;type&quot;:&quot;object&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/info">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;git&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;branch&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;commit&quot;:{&quot;type&quot;:&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;id&quot;:{&quot;type&quot;:&quot;string&quot;}}}}},&quot;build&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;artifact&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;group&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;name&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;version&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;}}}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/metrics">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;Datacenter&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Node&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;wan&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;NodeMeta&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;somekey&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;Service&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Service&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Tags&quot;:{&quot;type&quot;:&quot;array&quot;,&quot;items&quot;:{&quot;type&quot;:&quot;string&quot;}},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;wan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}}}},&quot;Meta&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;Port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;Check&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;SkipNodeUpdate&quot;:{&quot;type&quot;:&quot;boolean&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /actuator/shutdown">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /actuator/restart">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/rebookservice/welcome">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /api/v1/rebookservice/rebook/difference">
          <GeneratingPSM>JavaAnnotation[AnnotationName:PostMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /api/v1/rebookservice/rebook">
          <GeneratingPSM>JavaAnnotation[AnnotationName:PostMapping]</GeneratingPSM>
        </destinations>
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-rebook-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-rebook-service]</GeneratingPSM>
      </interface>
      <dependencies
          ConsumerOperation="dipatchSeat()"
          ProviderName="ts-seat-service"
          ProviderDestination="Endpoint[RequestURI:POST /api/v1/seatservice/seats&quot;]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="drawBackMoney()"
          ProviderName=""
          ProviderDestination="Endpoint[RequestURI:GET ]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="payDifferentMoney()"
          ProviderName="ts-inside-payment-service"
          ProviderDestination="Endpoint[RequestURI:POST /api/v1/inside_pay_service/inside_payment/difference&quot;]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="createOrder()">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="queryForStationName()"
          ProviderName="ts-station-service"
          ProviderDestination="Endpoint[RequestURI:GET /api/v1/stationservice/stations/name/]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="deleteOrder()">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="updateOrder()">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="getOrderByRebookInfo()">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="getTripAllDetailInformation()">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-rebook-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
      <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-rebook-service]</GeneratingPSM>
    </microservices>
    <microservices
        xsi:type="PIM:InfrastructureMicroservice"
        MicroserviceName="ts-rebook-mongo">
      <container
          ContainerName="ts-rebook-mongo">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-rebook-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
      </container>
      <components
          xsi:type="PIM:InfrastructureServerComponent"
          Category="Development_Pattern_Data_Persistence"
          Technology="MongoDB">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-rebook-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
      </components>
      <interface
          ServerURL="[http|https]://ts-rebook-mongo:&lt;port-number>">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-rebook-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
      </interface>
      <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-rebook-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
    </microservices>
    <microservices
        xsi:type="PIM:FunctionalMicroservice"
        MicroserviceName="ts-cancel-service">
      <container
          ContainerName="ts-cancel-service">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-cancel-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-cancel-service]</GeneratingPSM>
      </container>
      <components
          Category="Observability_Pattern_Application_Metrics_Generation"
          Technology="Actuator"
          Environment="COMPILE">
        <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
      </components>
      <components
          Category="Security_Pattern_Web_Security"
          Technology="Spring Security"
          Environment="COMPILE">
        <GeneratingPSM>JavaAnnotation[AnnotationName:EnableWebSecurity]</GeneratingPSM>
      </components>
      <interface
          ServerURL="[http|https]://ts-cancel-service:&lt;port-number>">
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/health">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;status&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;details&quot;:{&quot;type&quot;:&quot;object&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/info">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;git&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;branch&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;commit&quot;:{&quot;type&quot;:&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;id&quot;:{&quot;type&quot;:&quot;string&quot;}}}}},&quot;build&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;artifact&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;group&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;name&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;version&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;}}}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/metrics">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;Datacenter&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Node&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;wan&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;NodeMeta&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;somekey&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;Service&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Service&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Tags&quot;:{&quot;type&quot;:&quot;array&quot;,&quot;items&quot;:{&quot;type&quot;:&quot;string&quot;}},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;wan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}}}},&quot;Meta&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;Port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;Check&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;SkipNodeUpdate&quot;:{&quot;type&quot;:&quot;boolean&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /actuator/shutdown">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /actuator/restart">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/cancelservice/cancel/{orderId}/{loginId}">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/cancelservice/welcome">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/cancelservice/cancel/refound/{orderId}">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-cancel-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-cancel-service]</GeneratingPSM>
      </interface>
      <dependencies
          ConsumerOperation="getOrderByIdFromOrder()"
          ProviderName="ts-order-service"
          ProviderDestination="Endpoint[RequestURI:GET /api/v1/orderservice/order/]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="drawbackMoney()"
          ProviderName=""
          ProviderDestination="Endpoint[RequestURI:GET ]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="sendEmail()"
          ProviderName="ts-notification-service"
          ProviderDestination="Endpoint[RequestURI:POST /api/v1/notifyservice/notification/order_cancel_success&quot;]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="getOrderByIdFromOrderOther()"
          ProviderName="ts-order-other-service"
          ProviderDestination="Endpoint[RequestURI:GET /api/v1/orderOtherService/orderOther/]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="cancelFromOrder()"
          ProviderName="ts-order-service"
          ProviderDestination="Endpoint[RequestURI:PUT /api/v1/orderservice/order&quot;]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="getAccount()"
          ProviderName="ts-user-service"
          ProviderDestination="Endpoint[RequestURI:GET /api/v1/userservice/users/id/]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="cancelFromOtherOrder()"
          ProviderName="ts-order-other-service"
          ProviderDestination="Endpoint[RequestURI:PUT /api/v1/orderOtherService/orderOther&quot;]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-cancel-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
      <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-cancel-service]</GeneratingPSM>
    </microservices>
    <microservices
        xsi:type="PIM:FunctionalMicroservice"
        MicroserviceName="ts-assurance-service">
      <container
          ContainerName="ts-assurance-service">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-assurance-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-assurance-service]</GeneratingPSM>
      </container>
      <components
          Category="Observability_Pattern_Application_Metrics_Generation"
          Technology="Actuator"
          Environment="COMPILE">
        <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
      </components>
      <components
          xsi:type="PIM:InfrastructureClientComponent"
          Category="Development_Pattern_Data_Persistence"
          Technology="MongoDB"
          Environment="COMPILE">
        <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-data-mongodb]</GeneratingPSM>
        <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.host]</GeneratingPSM>
      </components>
      <components
          Category="Security_Pattern_Web_Security"
          Technology="Spring Security"
          Environment="COMPILE">
        <GeneratingPSM>JavaAnnotation[AnnotationName:EnableWebSecurity]</GeneratingPSM>
      </components>
      <interface
          ServerURL="[http|https]://ts-assurance-service:&lt;port-number>">
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/health">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;status&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;details&quot;:{&quot;type&quot;:&quot;object&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/info">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;git&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;branch&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;commit&quot;:{&quot;type&quot;:&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;id&quot;:{&quot;type&quot;:&quot;string&quot;}}}}},&quot;build&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;artifact&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;group&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;name&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;version&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;}}}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/metrics">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;Datacenter&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Node&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;wan&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;NodeMeta&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;somekey&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;Service&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Service&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Tags&quot;:{&quot;type&quot;:&quot;array&quot;,&quot;items&quot;:{&quot;type&quot;:&quot;string&quot;}},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;wan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}}}},&quot;Meta&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;Port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;Check&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;SkipNodeUpdate&quot;:{&quot;type&quot;:&quot;boolean&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /actuator/shutdown">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /actuator/restart">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="DELETE /api/v1/assuranceservice/assurances/assuranceid/{assuranceId}">
          <GeneratingPSM>JavaAnnotation[AnnotationName:DeleteMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/assuranceservice/assurance/orderid/{orderId}">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="PATCH /api/v1/assuranceservice/assurances/{assuranceId}/{orderId}/{typeIndex}">
          <GeneratingPSM>JavaAnnotation[AnnotationName:PatchMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/assuranceservice/assurances/{typeIndex}/{orderId}">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="DELETE /api/v1/assuranceservice/assurances/orderid/{orderId}">
          <GeneratingPSM>JavaAnnotation[AnnotationName:DeleteMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/assuranceservice/assurances">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/assuranceservice/assurances/types">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/assuranceservice/welcome">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/assuranceservice/assurances/assuranceid/{assuranceId}">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-assurance-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-assurance-service]</GeneratingPSM>
      </interface>
      <dependencies
          ProviderName="ts-assurance-mongo"
          ProviderDestination=""
          Environment="COMPILE">
        <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.host]</GeneratingPSM>
      </dependencies>
      <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-assurance-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
      <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-assurance-service]</GeneratingPSM>
    </microservices>
    <microservices
        xsi:type="PIM:InfrastructureMicroservice"
        MicroserviceName="ts-assurance-mongo">
      <container
          ContainerName="ts-assurance-mongo">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-assurance-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
      </container>
      <components
          xsi:type="PIM:InfrastructureServerComponent"
          Category="Development_Pattern_Data_Persistence"
          Technology="MongoDB">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-assurance-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
      </components>
      <interface
          ServerURL="[http|https]://ts-assurance-mongo:&lt;port-number>">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-assurance-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
      </interface>
      <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-assurance-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
    </microservices>
    <microservices
        xsi:type="PIM:FunctionalMicroservice"
        MicroserviceName="ts-seat-service">
      <container
          ContainerName="ts-seat-service">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-seat-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-seat-service]</GeneratingPSM>
      </container>
      <components
          Category="Observability_Pattern_Application_Metrics_Generation"
          Technology="Actuator"
          Environment="COMPILE">
        <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
      </components>
      <components
          Category="Security_Pattern_Web_Security"
          Technology="Spring Security"
          Environment="COMPILE">
        <GeneratingPSM>JavaAnnotation[AnnotationName:EnableWebSecurity]</GeneratingPSM>
      </components>
      <interface
          ServerURL="[http|https]://ts-seat-service:&lt;port-number>">
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/health">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;status&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;details&quot;:{&quot;type&quot;:&quot;object&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/info">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;git&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;branch&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;commit&quot;:{&quot;type&quot;:&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;id&quot;:{&quot;type&quot;:&quot;string&quot;}}}}},&quot;build&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;artifact&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;group&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;name&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;version&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;}}}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/metrics">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;Datacenter&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Node&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;wan&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;NodeMeta&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;somekey&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;Service&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Service&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Tags&quot;:{&quot;type&quot;:&quot;array&quot;,&quot;items&quot;:{&quot;type&quot;:&quot;string&quot;}},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;wan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}}}},&quot;Meta&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;Port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;Check&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;SkipNodeUpdate&quot;:{&quot;type&quot;:&quot;boolean&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /actuator/shutdown">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /actuator/restart">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/seatservice/welcome">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /api/v1/seatservice/seats/left_tickets">
          <GeneratingPSM>JavaAnnotation[AnnotationName:PostMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /api/v1/seatservice/seats">
          <GeneratingPSM>JavaAnnotation[AnnotationName:PostMapping]</GeneratingPSM>
        </destinations>
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-seat-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-seat-service]</GeneratingPSM>
      </interface>
      <dependencies
          ConsumerOperation="distributeSeat()"
          ProviderName="ts-travel2-service"
          ProviderDestination="Endpoint[RequestURI:GET /api/v1/travel2service/train_types/]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="distributeSeat()"
          ProviderName="ts-travel-service"
          ProviderDestination="Endpoint[RequestURI:GET /api/v1/travelservice/routes/]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="distributeSeat()"
          ProviderName="ts-travel-service"
          ProviderDestination="Endpoint[RequestURI:GET /api/v1/travelservice/train_types/]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="distributeSeat()"
          ProviderName="ts-travel2-service"
          ProviderDestination="Endpoint[RequestURI:GET /api/v1/travel2service/routes/]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="getDirectProportion()"
          ProviderName="ts-config-service"
          ProviderDestination="Endpoint[RequestURI:GET /api/v1/configservice/configs/DirectTicketAllocationProportion]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="getLeftTicketOfInterval()"
          ProviderName="ts-order-service"
          ProviderDestination="Endpoint[RequestURI:POST /api/v1/orderservice/order/tickets&quot;]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="getLeftTicketOfInterval()"
          ProviderName="ts-order-other-service"
          ProviderDestination="Endpoint[RequestURI:POST /api/v1/orderOtherService/orderOther/tickets&quot;]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-seat-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
      <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-seat-service]</GeneratingPSM>
    </microservices>
    <microservices
        xsi:type="PIM:FunctionalMicroservice"
        MicroserviceName="ts-travel-plan-service">
      <container
          ContainerName="ts-travel-plan-service">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-travel-plan-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-travel-plan-service]</GeneratingPSM>
      </container>
      <components
          Category="Observability_Pattern_Application_Metrics_Generation"
          Technology="Actuator"
          Environment="COMPILE">
        <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
      </components>
      <components
          Category="Security_Pattern_Web_Security"
          Technology="Spring Security"
          Environment="COMPILE">
        <GeneratingPSM>JavaAnnotation[AnnotationName:EnableWebSecurity]</GeneratingPSM>
      </components>
      <interface
          ServerURL="[http|https]://ts-travel-plan-service:&lt;port-number>">
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/health">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;status&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;details&quot;:{&quot;type&quot;:&quot;object&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/info">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;git&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;branch&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;commit&quot;:{&quot;type&quot;:&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;id&quot;:{&quot;type&quot;:&quot;string&quot;}}}}},&quot;build&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;artifact&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;group&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;name&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;version&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;}}}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/metrics">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;Datacenter&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Node&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;wan&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;NodeMeta&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;somekey&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;Service&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Service&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Tags&quot;:{&quot;type&quot;:&quot;array&quot;,&quot;items&quot;:{&quot;type&quot;:&quot;string&quot;}},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;wan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}}}},&quot;Meta&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;Port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;Check&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;SkipNodeUpdate&quot;:{&quot;type&quot;:&quot;boolean&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /actuator/shutdown">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /actuator/restart">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST api/v1/travelplanservice/travelPlan/quickest">
          <GeneratingPSM>JavaAnnotation[AnnotationName:PostMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET api/v1/travelplanservice/welcome">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST api/v1/travelplanservice/travelPlan/cheapest">
          <GeneratingPSM>JavaAnnotation[AnnotationName:PostMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST api/v1/travelplanservice/travelPlan/transferResult">
          <GeneratingPSM>JavaAnnotation[AnnotationName:PostMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST api/v1/travelplanservice/travelPlan/minStation">
          <GeneratingPSM>JavaAnnotation[AnnotationName:PostMapping]</GeneratingPSM>
        </destinations>
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-travel-plan-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-travel-plan-service]</GeneratingPSM>
      </interface>
      <dependencies
          ConsumerOperation="getRestTicketNumber()"
          ProviderName="ts-seat-service"
          ProviderDestination="Endpoint[RequestURI:POST /api/v1/seatservice/seats/left_tickets&quot;]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="getRoutePlanResultCheapest()"
          ProviderName="ts-route-plan-service"
          ProviderDestination="Endpoint[RequestURI:POST /api/v1/routeplanservice/routePlan/cheapestRoute&quot;]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="transferStationIdToStationName()"
          ProviderName="ts-station-service"
          ProviderDestination="Endpoint[RequestURI:POST /api/v1/stationservice/stations/namelist&quot;]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="getRoutePlanResultQuickest()"
          ProviderName="ts-route-plan-service"
          ProviderDestination="Endpoint[RequestURI:POST /api/v1/routeplanservice/routePlan/quickestRoute&quot;]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="tripsFromNormal()"
          ProviderName="ts-travel2-service"
          ProviderDestination="Endpoint[RequestURI:POST /api/v1/travel2service/trips/left&quot;]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="getRoutePlanResultMinStation()"
          ProviderName="ts-route-plan-service"
          ProviderDestination="Endpoint[RequestURI:POST /api/v1/routeplanservice/routePlan/minStopStations&quot;]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="queryForStationId()"
          ProviderName="ts-ticketinfo-service"
          ProviderDestination="Endpoint[RequestURI:GET /api/v1/ticketinfoservice/ticketinfo/]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="tripsFromHighSpeed()"
          ProviderName="ts-travel-service"
          ProviderDestination="Endpoint[RequestURI:POST /api/v1/travelservice/trips/left&quot;]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-travel-plan-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
      <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-travel-plan-service]</GeneratingPSM>
    </microservices>
    <microservices
        MicroserviceName="ts-ticket-office-service">
      <container
          ContainerName="ts-ticket-office-service">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-ticket-office-service,ImageField:node, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-ticket-office-service]</GeneratingPSM>
      </container>
      <interface
          ServerURL="[http|https]://ts-ticket-office-service:&lt;port-number>">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-ticket-office-service,ImageField:node, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-ticket-office-service]</GeneratingPSM>
      </interface>
      <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-ticket-office-service,ImageField:node, GeneratesLogs:false]</GeneratingPSM>
      <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-ticket-office-service]</GeneratingPSM>
    </microservices>
    <microservices
        xsi:type="PIM:InfrastructureMicroservice"
        MicroserviceName="ts-ticket-office-mongo">
      <container
          ContainerName="ts-ticket-office-mongo">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-ticket-office-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
      </container>
      <components
          xsi:type="PIM:InfrastructureServerComponent"
          Category="Development_Pattern_Data_Persistence"
          Technology="MongoDB">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-ticket-office-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
      </components>
      <interface
          ServerURL="[http|https]://ts-ticket-office-mongo:&lt;port-number>">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-ticket-office-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
      </interface>
      <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-ticket-office-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
    </microservices>
    <microservices
        MicroserviceName="ts-news-service">
      <container
          ContainerName="ts-news-service">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-news-service,ImageField:mrrm/web.go, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-news-service]</GeneratingPSM>
      </container>
      <interface
          ServerURL="[http|https]://ts-news-service:&lt;port-number>">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-news-service,ImageField:mrrm/web.go, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-news-service]</GeneratingPSM>
      </interface>
      <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-news-service,ImageField:mrrm/web.go, GeneratesLogs:false]</GeneratingPSM>
      <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-news-service]</GeneratingPSM>
    </microservices>
    <microservices
        xsi:type="PIM:InfrastructureMicroservice"
        MicroserviceName="ts-news-mongo">
      <container
          ContainerName="ts-news-mongo">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-news-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
      </container>
      <components
          xsi:type="PIM:InfrastructureServerComponent"
          Category="Development_Pattern_Data_Persistence"
          Technology="MongoDB">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-news-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
      </components>
      <interface
          ServerURL="[http|https]://ts-news-mongo:&lt;port-number>">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-news-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
      </interface>
      <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-news-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
    </microservices>
    <microservices
        xsi:type="PIM:InfrastructureMicroservice"
        MicroserviceName="ts-voucher-mysql">
      <container
          ContainerName="ts-voucher-mysql">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-voucher-mysql,ImageField:mysql, GeneratesLogs:false]</GeneratingPSM>
      </container>
      <components
          xsi:type="PIM:InfrastructureServerComponent"
          Category="Development_Pattern_Data_Persistence"
          Technology="MySQL">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-voucher-mysql,ImageField:mysql, GeneratesLogs:false]</GeneratingPSM>
      </components>
      <interface
          ServerURL="[http|https]://ts-voucher-mysql:&lt;port-number>">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-voucher-mysql,ImageField:mysql, GeneratesLogs:false]</GeneratingPSM>
      </interface>
      <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-voucher-mysql,ImageField:mysql, GeneratesLogs:false]</GeneratingPSM>
    </microservices>
    <microservices
        MicroserviceName="ts-voucher-service">
      <container
          ContainerName="ts-voucher-service">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-voucher-service,ImageField:python:3, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-voucher-service]</GeneratingPSM>
      </container>
      <interface
          ServerURL="[http|https]://ts-voucher-service:&lt;port-number>">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-voucher-service,ImageField:python:3, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-voucher-service]</GeneratingPSM>
      </interface>
      <dependencies
          ProviderName="ts-voucher-mysql"
          Environment="DOCKER">
        <GeneratingPSM>DockerContainerLink[LinksDependsOnField:ts-voucher-mysql]</GeneratingPSM>
      </dependencies>
      <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-voucher-service,ImageField:python:3, GeneratesLogs:false]</GeneratingPSM>
      <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-voucher-service]</GeneratingPSM>
    </microservices>
    <microservices
        xsi:type="PIM:FunctionalMicroservice"
        MicroserviceName="ts-food-map-service">
      <container
          ContainerName="ts-food-map-service">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-food-map-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-food-map-service]</GeneratingPSM>
      </container>
      <components
          Category="Observability_Pattern_Application_Metrics_Generation"
          Technology="Actuator"
          Environment="COMPILE">
        <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
      </components>
      <components
          xsi:type="PIM:InfrastructureClientComponent"
          Category="Development_Pattern_Data_Persistence"
          Technology="MongoDB"
          Environment="COMPILE">
        <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-data-mongodb]</GeneratingPSM>
        <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.host]</GeneratingPSM>
      </components>
      <components
          Category="Security_Pattern_Web_Security"
          Technology="Spring Security"
          Environment="COMPILE">
        <GeneratingPSM>JavaAnnotation[AnnotationName:EnableWebSecurity]</GeneratingPSM>
      </components>
      <interface
          ServerURL="[http|https]://ts-food-map-service:&lt;port-number>">
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/health">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;status&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;details&quot;:{&quot;type&quot;:&quot;object&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/info">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;git&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;branch&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;commit&quot;:{&quot;type&quot;:&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;id&quot;:{&quot;type&quot;:&quot;string&quot;}}}}},&quot;build&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;artifact&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;group&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;name&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;version&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;}}}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/metrics">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;Datacenter&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Node&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;wan&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;NodeMeta&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;somekey&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;Service&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Service&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Tags&quot;:{&quot;type&quot;:&quot;array&quot;,&quot;items&quot;:{&quot;type&quot;:&quot;string&quot;}},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;wan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}}}},&quot;Meta&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;Port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;Check&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;SkipNodeUpdate&quot;:{&quot;type&quot;:&quot;boolean&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /actuator/shutdown">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /actuator/restart">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/foodmapservice/trainfoods/{tripId}">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/foodmapservice/trainfoods">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/foodmapservice/trainfoods/welcome">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/foodmapservice/foodstores/welcome">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/foodmapservice/foodstores/{stationId}">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /api/v1/foodmapservice/foodstores">
          <GeneratingPSM>JavaAnnotation[AnnotationName:PostMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/foodmapservice/foodstores">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-food-map-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-food-map-service]</GeneratingPSM>
      </interface>
      <dependencies
          ProviderName="ts-food-map-mongo"
          ProviderDestination=""
          Environment="COMPILE">
        <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.host]</GeneratingPSM>
      </dependencies>
      <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-food-map-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
      <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-food-map-service]</GeneratingPSM>
    </microservices>
    <microservices
        xsi:type="PIM:InfrastructureMicroservice"
        MicroserviceName="ts-food-map-mongo">
      <container
          ContainerName="ts-food-map-mongo">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-food-map-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
      </container>
      <components
          xsi:type="PIM:InfrastructureServerComponent"
          Category="Development_Pattern_Data_Persistence"
          Technology="MongoDB">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-food-map-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
      </components>
      <interface
          ServerURL="[http|https]://ts-food-map-mongo:&lt;port-number>">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-food-map-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
      </interface>
      <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-food-map-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
    </microservices>
    <microservices
        xsi:type="PIM:FunctionalMicroservice"
        MicroserviceName="ts-route-plan-service">
      <container
          ContainerName="ts-route-plan-service">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-route-plan-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-route-plan-service]</GeneratingPSM>
      </container>
      <components
          Category="Observability_Pattern_Application_Metrics_Generation"
          Technology="Actuator"
          Environment="COMPILE">
        <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
      </components>
      <components
          Category="Security_Pattern_Web_Security"
          Technology="Spring Security"
          Environment="COMPILE">
        <GeneratingPSM>JavaAnnotation[AnnotationName:EnableWebSecurity]</GeneratingPSM>
      </components>
      <interface
          ServerURL="[http|https]://ts-route-plan-service:&lt;port-number>">
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/health">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;status&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;details&quot;:{&quot;type&quot;:&quot;object&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/info">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;git&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;branch&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;commit&quot;:{&quot;type&quot;:&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;id&quot;:{&quot;type&quot;:&quot;string&quot;}}}}},&quot;build&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;artifact&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;group&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;name&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;version&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;}}}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/metrics">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;Datacenter&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Node&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;wan&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;NodeMeta&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;somekey&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;Service&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Service&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Tags&quot;:{&quot;type&quot;:&quot;array&quot;,&quot;items&quot;:{&quot;type&quot;:&quot;string&quot;}},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;wan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}}}},&quot;Meta&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;Port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;Check&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;SkipNodeUpdate&quot;:{&quot;type&quot;:&quot;boolean&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /actuator/shutdown">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /actuator/restart">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /api/v1/routeplanservice/routePlan/minStopStations">
          <GeneratingPSM>JavaAnnotation[AnnotationName:PostMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/routeplanservice/welcome">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /api/v1/routeplanservice/routePlan/quickestRoute">
          <GeneratingPSM>JavaAnnotation[AnnotationName:PostMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /api/v1/routeplanservice/routePlan/cheapestRoute">
          <GeneratingPSM>JavaAnnotation[AnnotationName:PostMapping]</GeneratingPSM>
        </destinations>
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-route-plan-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-route-plan-service]</GeneratingPSM>
      </interface>
      <dependencies
          ConsumerOperation="searchMinStopStations()"
          ProviderName="ts-travel-service"
          ProviderDestination="Endpoint[RequestURI:POST /api/v1/travelservice/trips/routes&quot;]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="searchMinStopStations()"
          ProviderName=""
          ProviderDestination="Endpoint[RequestURI:GET ]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="getRouteByRouteId()"
          ProviderName="ts-route-service"
          ProviderDestination="Endpoint[RequestURI:GET /api/v1/routeservice/routes/]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="searchMinStopStations()"
          ProviderName="ts-travel2-service"
          ProviderDestination="Endpoint[RequestURI:POST /api/v1/travel2service/trips/routes&quot;]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="getTripFromNormalTrainTravelService()"
          ProviderName="ts-travel2-service"
          ProviderDestination="Endpoint[RequestURI:POST /api/v1/travel2service/trips/left&quot;]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="searchMinStopStations()">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="queryForStationId()"
          ProviderName="ts-station-service"
          ProviderDestination="Endpoint[RequestURI:GET /api/v1/stationservice/stations/id/]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="getTripFromHighSpeedTravelServive()"
          ProviderName="ts-travel-service"
          ProviderDestination="Endpoint[RequestURI:POST /api/v1/travelservice/trips/left&quot;]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-route-plan-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
      <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-route-plan-service]</GeneratingPSM>
    </microservices>
    <microservices
        xsi:type="PIM:FunctionalMicroservice"
        MicroserviceName="ts-food-service">
      <container
          ContainerName="ts-food-service">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-food-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-food-service]</GeneratingPSM>
      </container>
      <components
          Category="Observability_Pattern_Application_Metrics_Generation"
          Technology="Actuator"
          Environment="COMPILE">
        <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
      </components>
      <components
          xsi:type="PIM:InfrastructureClientComponent"
          Category="Development_Pattern_Data_Persistence"
          Technology="MongoDB"
          Environment="COMPILE">
        <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-data-mongodb]</GeneratingPSM>
        <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.host]</GeneratingPSM>
      </components>
      <components
          Category="Security_Pattern_Web_Security"
          Technology="Spring Security"
          Environment="COMPILE">
        <GeneratingPSM>JavaAnnotation[AnnotationName:EnableWebSecurity]</GeneratingPSM>
      </components>
      <interface
          ServerURL="[http|https]://ts-food-service:&lt;port-number>">
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/health">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;status&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;details&quot;:{&quot;type&quot;:&quot;object&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/info">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;git&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;branch&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;commit&quot;:{&quot;type&quot;:&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;id&quot;:{&quot;type&quot;:&quot;string&quot;}}}}},&quot;build&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;artifact&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;group&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;name&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;version&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;}}}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/metrics">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;Datacenter&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Node&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;wan&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;NodeMeta&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;somekey&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;Service&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Service&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Tags&quot;:{&quot;type&quot;:&quot;array&quot;,&quot;items&quot;:{&quot;type&quot;:&quot;string&quot;}},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;wan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}}}},&quot;Meta&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;Port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;Check&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;SkipNodeUpdate&quot;:{&quot;type&quot;:&quot;boolean&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /actuator/shutdown">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /actuator/restart">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/foodservice/welcome">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/foodservice/orders/{orderId}">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="PUT /api/v1/foodservice/orders">
          <GeneratingPSM>JavaAnnotation[AnnotationName:PutMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/foodservice/orders">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /api/v1/foodservice/orders">
          <GeneratingPSM>JavaAnnotation[AnnotationName:PostMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/foodservice/foods/{date}/{startStation}/{endStation}/{tripId}">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="DELETE /api/v1/foodservice/orders/{orderId}">
          <GeneratingPSM>JavaAnnotation[AnnotationName:DeleteMapping]</GeneratingPSM>
        </destinations>
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-food-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-food-service]</GeneratingPSM>
      </interface>
      <dependencies
          ProviderName="ts-food-mongo"
          ProviderDestination=""
          Environment="COMPILE">
        <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.host]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="getAllFood()"
          ProviderName="ts-food-map-service"
          ProviderDestination="Endpoint[RequestURI:POST /api/v1/foodmapservice/foodstores&quot;]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="getAllFood()"
          ProviderName="ts-station-service"
          ProviderDestination="Endpoint[RequestURI:GET /api/v1/stationservice/stations/id/]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="getAllFood()"
          ProviderName="ts-food-map-service"
          ProviderDestination="Endpoint[RequestURI:GET /api/v1/foodmapservice/trainfoods/]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="getAllFood()"
          ProviderName="ts-travel-service"
          ProviderDestination="Endpoint[RequestURI:GET /api/v1/travelservice/routes/]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-food-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
      <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-food-service]</GeneratingPSM>
    </microservices>
    <microservices
        xsi:type="PIM:FunctionalMicroservice"
        MicroserviceName="ts-consign-service">
      <container
          ContainerName="ts-consign-service">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-consign-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-consign-service]</GeneratingPSM>
      </container>
      <components
          Category="Observability_Pattern_Application_Metrics_Generation"
          Technology="Actuator"
          Environment="COMPILE">
        <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
      </components>
      <components
          xsi:type="PIM:InfrastructureClientComponent"
          Category="Development_Pattern_Data_Persistence"
          Technology="MongoDB"
          Environment="COMPILE">
        <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-data-mongodb]</GeneratingPSM>
        <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.host]</GeneratingPSM>
      </components>
      <components
          Category="Observability_Pattern_Application_Metrics_Logging"
          Technology="Slf4j"
          Environment="COMPILE">
        <GeneratingPSM>JavaAnnotation[AnnotationName:Slf4j]</GeneratingPSM>
      </components>
      <components
          Category="Security_Pattern_Web_Security"
          Technology="Spring Security"
          Environment="COMPILE">
        <GeneratingPSM>JavaAnnotation[AnnotationName:EnableWebSecurity]</GeneratingPSM>
      </components>
      <interface
          ServerURL="[http|https]://ts-consign-service:&lt;port-number>">
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/health">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;status&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;details&quot;:{&quot;type&quot;:&quot;object&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/info">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;git&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;branch&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;commit&quot;:{&quot;type&quot;:&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;id&quot;:{&quot;type&quot;:&quot;string&quot;}}}}},&quot;build&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;artifact&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;group&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;name&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;version&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;}}}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/metrics">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;Datacenter&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Node&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;wan&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;NodeMeta&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;somekey&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;Service&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Service&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Tags&quot;:{&quot;type&quot;:&quot;array&quot;,&quot;items&quot;:{&quot;type&quot;:&quot;string&quot;}},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;wan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}}}},&quot;Meta&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;Port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;Check&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;SkipNodeUpdate&quot;:{&quot;type&quot;:&quot;boolean&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /actuator/shutdown">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /actuator/restart">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /api/v1/consignservice/consigns">
          <GeneratingPSM>JavaAnnotation[AnnotationName:PostMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/consignservice/welcome">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/consignservice/consigns/{consignee}">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="PUT /api/v1/consignservice/consigns">
          <GeneratingPSM>JavaAnnotation[AnnotationName:PutMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/consignservice/consigns/account/{id}">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/consignservice/consigns/order/{id}">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-consign-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-consign-service]</GeneratingPSM>
      </interface>
      <dependencies
          ProviderName="ts-consign-mongo"
          ProviderDestination=""
          Environment="COMPILE">
        <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.host]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="insertConsignRecord()"
          ProviderName=""
          ProviderDestination="Endpoint[RequestURI:GET ]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-consign-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
      <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-consign-service]</GeneratingPSM>
    </microservices>
    <microservices
        xsi:type="PIM:InfrastructureMicroservice"
        MicroserviceName="ts-consign-mongo">
      <container
          ContainerName="ts-consign-mongo">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-consign-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
      </container>
      <components
          xsi:type="PIM:InfrastructureServerComponent"
          Category="Development_Pattern_Data_Persistence"
          Technology="MongoDB">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-consign-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
      </components>
      <interface
          ServerURL="[http|https]://ts-consign-mongo:&lt;port-number>">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-consign-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
      </interface>
      <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-consign-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
    </microservices>
    <microservices
        xsi:type="PIM:FunctionalMicroservice"
        MicroserviceName="ts-consign-price-service">
      <container
          ContainerName="ts-consign-price-service">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-consign-price-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-consign-price-service]</GeneratingPSM>
      </container>
      <components
          Category="Observability_Pattern_Application_Metrics_Generation"
          Technology="Actuator"
          Environment="COMPILE">
        <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
      </components>
      <components
          xsi:type="PIM:InfrastructureClientComponent"
          Category="Development_Pattern_Data_Persistence"
          Technology="MongoDB"
          Environment="COMPILE">
        <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-data-mongodb]</GeneratingPSM>
        <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.host]</GeneratingPSM>
      </components>
      <components
          Category="Security_Pattern_Web_Security"
          Technology="Spring Security"
          Environment="COMPILE">
        <GeneratingPSM>JavaAnnotation[AnnotationName:EnableWebSecurity]</GeneratingPSM>
      </components>
      <interface
          ServerURL="[http|https]://ts-consign-price-service:&lt;port-number>">
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/health">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;status&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;details&quot;:{&quot;type&quot;:&quot;object&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/info">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;git&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;branch&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;commit&quot;:{&quot;type&quot;:&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;id&quot;:{&quot;type&quot;:&quot;string&quot;}}}}},&quot;build&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;artifact&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;group&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;name&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;version&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;}}}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/metrics">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;Datacenter&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Node&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;wan&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;NodeMeta&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;somekey&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;Service&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Service&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Tags&quot;:{&quot;type&quot;:&quot;array&quot;,&quot;items&quot;:{&quot;type&quot;:&quot;string&quot;}},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;wan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}}}},&quot;Meta&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;Port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;Check&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;SkipNodeUpdate&quot;:{&quot;type&quot;:&quot;boolean&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /actuator/shutdown">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /actuator/restart">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/consignpriceservice/consignprice/price">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/consignpriceservice/consignprice/config">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/consignpriceservice/consignprice/{weight}/{isWithinRegion}">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/consignpriceservice/welcome">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /api/v1/consignpriceservice/consignprice">
          <GeneratingPSM>JavaAnnotation[AnnotationName:PostMapping]</GeneratingPSM>
        </destinations>
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-consign-price-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-consign-price-service]</GeneratingPSM>
      </interface>
      <dependencies
          ProviderName="ts-consign-price-mongo"
          ProviderDestination=""
          Environment="COMPILE">
        <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.host]</GeneratingPSM>
      </dependencies>
      <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-consign-price-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
      <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-consign-price-service]</GeneratingPSM>
    </microservices>
    <microservices
        xsi:type="PIM:InfrastructureMicroservice"
        MicroserviceName="ts-consign-price-mongo">
      <container
          ContainerName="ts-consign-price-mongo">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-consign-price-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
      </container>
      <components
          xsi:type="PIM:InfrastructureServerComponent"
          Category="Development_Pattern_Data_Persistence"
          Technology="MongoDB">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-consign-price-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
      </components>
      <interface
          ServerURL="[http|https]://ts-consign-price-mongo:&lt;port-number>">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-consign-price-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
      </interface>
      <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-consign-price-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
    </microservices>
    <microservices
        xsi:type="PIM:InfrastructureMicroservice"
        MicroserviceName="ts-food-mongo">
      <container
          ContainerName="ts-food-mongo">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-food-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
      </container>
      <components
          xsi:type="PIM:InfrastructureServerComponent"
          Category="Development_Pattern_Data_Persistence"
          Technology="MongoDB">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-food-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
      </components>
      <interface
          ServerURL="[http|https]://ts-food-mongo:&lt;port-number>">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-food-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
      </interface>
      <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-food-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
    </microservices>
    <microservices
        xsi:type="PIM:FunctionalMicroservice"
        MicroserviceName="ts-admin-basic-info-service">
      <container
          ContainerName="ts-admin-basic-info-service">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-admin-basic-info-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-admin-basic-info-service]</GeneratingPSM>
      </container>
      <components
          Category="Observability_Pattern_Application_Metrics_Generation"
          Technology="Actuator"
          Environment="COMPILE">
        <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
      </components>
      <components
          Category="Observability_Pattern_Application_Metrics_Logging"
          Technology="Slf4j"
          Environment="COMPILE">
        <GeneratingPSM>JavaAnnotation[AnnotationName:Slf4j]</GeneratingPSM>
      </components>
      <components
          Category="Security_Pattern_Web_Security"
          Technology="Spring Security"
          Environment="COMPILE">
        <GeneratingPSM>JavaAnnotation[AnnotationName:EnableWebSecurity]</GeneratingPSM>
      </components>
      <interface
          ServerURL="[http|https]://ts-admin-basic-info-service:&lt;port-number>">
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/health">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;status&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;details&quot;:{&quot;type&quot;:&quot;object&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/info">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;git&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;branch&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;commit&quot;:{&quot;type&quot;:&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;id&quot;:{&quot;type&quot;:&quot;string&quot;}}}}},&quot;build&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;artifact&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;group&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;name&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;version&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;}}}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/metrics">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;Datacenter&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Node&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;wan&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;NodeMeta&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;somekey&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;Service&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Service&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Tags&quot;:{&quot;type&quot;:&quot;array&quot;,&quot;items&quot;:{&quot;type&quot;:&quot;string&quot;}},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;wan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}}}},&quot;Meta&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;Port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;Check&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;SkipNodeUpdate&quot;:{&quot;type&quot;:&quot;boolean&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /actuator/shutdown">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /actuator/restart">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="DELETE /api/v1/adminbasicservice/adminbasic/contacts/{contactsId}">
          <GeneratingPSM>JavaAnnotation[AnnotationName:DeleteMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="DELETE /api/v1/adminbasicservice/adminbasic/configs/{name}">
          <GeneratingPSM>JavaAnnotation[AnnotationName:DeleteMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /api/v1/adminbasicservice/adminbasic/contacts">
          <GeneratingPSM>JavaAnnotation[AnnotationName:PostMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/adminbasicservice/adminbasic/configs">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /api/v1/adminbasicservice/adminbasic/stations">
          <GeneratingPSM>JavaAnnotation[AnnotationName:PostMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="DELETE /api/v1/adminbasicservice/adminbasic/trains/{id}">
          <GeneratingPSM>JavaAnnotation[AnnotationName:DeleteMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="DELETE /api/v1/adminbasicservice/adminbasic/stations">
          <GeneratingPSM>JavaAnnotation[AnnotationName:DeleteMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="PUT /api/v1/adminbasicservice/adminbasic/contacts">
          <GeneratingPSM>JavaAnnotation[AnnotationName:PutMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="PUT /api/v1/adminbasicservice/adminbasic/stations">
          <GeneratingPSM>JavaAnnotation[AnnotationName:PutMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /api/v1/adminbasicservice/adminbasic/prices">
          <GeneratingPSM>JavaAnnotation[AnnotationName:PostMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/adminbasicservice/adminbasic/trains">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/adminbasicservice/adminbasic/stations">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="PUT /api/v1/adminbasicservice/adminbasic/trains">
          <GeneratingPSM>JavaAnnotation[AnnotationName:PutMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /api/v1/adminbasicservice/adminbasic/configs">
          <GeneratingPSM>JavaAnnotation[AnnotationName:PostMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/adminbasicservice/welcome">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="DELETE /api/v1/adminbasicservice/adminbasic/prices">
          <GeneratingPSM>JavaAnnotation[AnnotationName:DeleteMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /api/v1/adminbasicservice/adminbasic/trains">
          <GeneratingPSM>JavaAnnotation[AnnotationName:PostMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/adminbasicservice/adminbasic/contacts">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="PUT /api/v1/adminbasicservice/adminbasic/configs">
          <GeneratingPSM>JavaAnnotation[AnnotationName:PutMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="PUT /api/v1/adminbasicservice/adminbasic/prices">
          <GeneratingPSM>JavaAnnotation[AnnotationName:PutMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/adminbasicservice/adminbasic/prices">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-admin-basic-info-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-admin-basic-info-service]</GeneratingPSM>
      </interface>
      <dependencies
          ConsumerOperation="getAllStations()"
          ProviderName="ts-station-service"
          ProviderDestination="Endpoint[RequestURI:GET /api/v1/stationservice/stations&quot;]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="getAllPrices()"
          ProviderName="ts-price-service"
          ProviderDestination="Endpoint[RequestURI:GET /api/v1/priceservice/prices&quot;]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="addTrain()"
          ProviderName="ts-train-service"
          ProviderDestination="Endpoint[RequestURI:POST /api/v1/trainservice/trains&quot;]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="getAllContacts()"
          ProviderName="ts-contacts-service"
          ProviderDestination="Endpoint[RequestURI:GET /api/v1/contactservice/contacts&quot;]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="addContact()"
          ProviderName="ts-contacts-service"
          ProviderDestination="Endpoint[RequestURI:POST /api/v1/contactservice/contacts/admin&quot;]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="getAllTrains()"
          ProviderName="ts-train-service"
          ProviderDestination="Endpoint[RequestURI:GET /api/v1/trainservice/trains&quot;]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="addStation()"
          ProviderName="ts-station-service"
          ProviderDestination="Endpoint[RequestURI:POST /api/v1/stationservice/stations&quot;]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="addPrice()"
          ProviderName="ts-price-service"
          ProviderDestination="Endpoint[RequestURI:POST /api/v1/priceservice/prices&quot;]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="deleteContact()"
          ProviderName="ts-contacts-service"
          ProviderDestination="Endpoint[RequestURI:DELETE /api/v1/contactservice/contacts/]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="addConfig()"
          ProviderName="ts-config-service"
          ProviderDestination="Endpoint[RequestURI:POST /api/v1/configservice/configs&quot;]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="modifyStation()"
          ProviderName="ts-station-service"
          ProviderDestination="Endpoint[RequestURI:PUT /api/v1/stationservice/stations&quot;]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="modifyConfig()"
          ProviderName="ts-config-service"
          ProviderDestination="Endpoint[RequestURI:PUT /api/v1/configservice/configs&quot;]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="getAllConfigs()"
          ProviderName="ts-config-service"
          ProviderDestination="Endpoint[RequestURI:GET /api/v1/configservice/configs&quot;]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="modifyContact()"
          ProviderName="ts-contacts-service"
          ProviderDestination="Endpoint[RequestURI:PUT /api/v1/contactservice/contacts&quot;]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="modifyTrain()"
          ProviderName="ts-train-service"
          ProviderDestination="Endpoint[RequestURI:PUT /api/v1/trainservice/trains&quot;]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="deletePrice()"
          ProviderName="ts-price-service"
          ProviderDestination="Endpoint[RequestURI:DELETE /api/v1/priceservice/prices&quot;]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="deleteStation()"
          ProviderName="ts-station-service"
          ProviderDestination="Endpoint[RequestURI:DELETE /api/v1/stationservice/stations&quot;]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="modifyPrice()"
          ProviderName="ts-price-service"
          ProviderDestination="Endpoint[RequestURI:PUT /api/v1/priceservice/prices&quot;]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="deleteTrain()"
          ProviderName="ts-train-service"
          ProviderDestination="Endpoint[RequestURI:DELETE /api/v1/trainservice/trains/]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="deleteConfig()"
          ProviderName="ts-config-service"
          ProviderDestination="Endpoint[RequestURI:DELETE /api/v1/configservice/configs/]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-admin-basic-info-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
      <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-admin-basic-info-service]</GeneratingPSM>
    </microservices>
    <microservices
        xsi:type="PIM:FunctionalMicroservice"
        MicroserviceName="ts-admin-order-service">
      <container
          ContainerName="ts-admin-order-service">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-admin-order-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-admin-order-service]</GeneratingPSM>
      </container>
      <components
          Category="Observability_Pattern_Application_Metrics_Generation"
          Technology="Actuator"
          Environment="COMPILE">
        <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
      </components>
      <components
          Category="Security_Pattern_Web_Security"
          Technology="Spring Security"
          Environment="COMPILE">
        <GeneratingPSM>JavaAnnotation[AnnotationName:EnableWebSecurity]</GeneratingPSM>
      </components>
      <components
          Category="Observability_Pattern_Application_Metrics_Logging"
          Technology="Slf4j"
          Environment="COMPILE">
        <GeneratingPSM>JavaAnnotation[AnnotationName:Slf4j]</GeneratingPSM>
      </components>
      <interface
          ServerURL="[http|https]://ts-admin-order-service:&lt;port-number>">
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/health">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;status&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;details&quot;:{&quot;type&quot;:&quot;object&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/info">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;git&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;branch&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;commit&quot;:{&quot;type&quot;:&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;id&quot;:{&quot;type&quot;:&quot;string&quot;}}}}},&quot;build&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;artifact&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;group&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;name&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;version&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;}}}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/metrics">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;Datacenter&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Node&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;wan&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;NodeMeta&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;somekey&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;Service&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Service&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Tags&quot;:{&quot;type&quot;:&quot;array&quot;,&quot;items&quot;:{&quot;type&quot;:&quot;string&quot;}},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;wan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}}}},&quot;Meta&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;Port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;Check&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;SkipNodeUpdate&quot;:{&quot;type&quot;:&quot;boolean&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /actuator/shutdown">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /actuator/restart">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/adminorderservice/welcome">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="DELETE /api/v1/adminorderservice/adminorder/{orderId}/{trainNumber}">
          <GeneratingPSM>JavaAnnotation[AnnotationName:DeleteMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="PUT /api/v1/adminorderservice/adminorder">
          <GeneratingPSM>JavaAnnotation[AnnotationName:PutMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /api/v1/adminorderservice/adminorder">
          <GeneratingPSM>JavaAnnotation[AnnotationName:PostMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/adminorderservice/adminorder">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-admin-order-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-admin-order-service]</GeneratingPSM>
      </interface>
      <dependencies
          ConsumerOperation="addOrder()"
          ProviderName="ts-order-service"
          ProviderDestination="Endpoint[RequestURI:POST /api/v1/orderservice/order/admin&quot;]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="updateOrder()"
          ProviderName="ts-order-service"
          ProviderDestination="Endpoint[RequestURI:PUT /api/v1/orderservice/order/admin&quot;]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="addOrder()"
          ProviderName="ts-order-other-service"
          ProviderDestination="Endpoint[RequestURI:POST /api/v1/orderOtherService/orderOther/admin&quot;]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="deleteOrder()"
          ProviderName="ts-order-service"
          ProviderDestination="Endpoint[RequestURI:DELETE /api/v1/orderservice/order/]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="deleteOrder()"
          ProviderName="ts-order-other-service"
          ProviderDestination="Endpoint[RequestURI:DELETE /api/v1/orderOtherService/orderOther/]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="getAllOrders()"
          ProviderName="ts-order-other-service"
          ProviderDestination="Endpoint[RequestURI:GET /api/v1/orderOtherService/orderOther&quot;]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="getAllOrders()"
          ProviderName="ts-order-service"
          ProviderDestination="Endpoint[RequestURI:GET /api/v1/orderservice/order&quot;]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="updateOrder()"
          ProviderName="ts-order-other-service"
          ProviderDestination="Endpoint[RequestURI:PUT /api/v1/orderOtherService/orderOther/admin&quot;]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-admin-order-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
      <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-admin-order-service]</GeneratingPSM>
    </microservices>
    <microservices
        xsi:type="PIM:FunctionalMicroservice"
        MicroserviceName="ts-admin-route-service">
      <container
          ContainerName="ts-admin-route-service">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-admin-route-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-admin-route-service]</GeneratingPSM>
      </container>
      <components
          Category="Observability_Pattern_Application_Metrics_Generation"
          Technology="Actuator"
          Environment="COMPILE">
        <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
      </components>
      <components
          Category="Observability_Pattern_Application_Metrics_Logging"
          Technology="Slf4j"
          Environment="COMPILE">
        <GeneratingPSM>JavaAnnotation[AnnotationName:Slf4j]</GeneratingPSM>
      </components>
      <components
          Category="Security_Pattern_Web_Security"
          Technology="Spring Security"
          Environment="COMPILE">
        <GeneratingPSM>JavaAnnotation[AnnotationName:EnableWebSecurity]</GeneratingPSM>
      </components>
      <interface
          ServerURL="[http|https]://ts-admin-route-service:&lt;port-number>">
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/health">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;status&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;details&quot;:{&quot;type&quot;:&quot;object&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/info">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;git&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;branch&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;commit&quot;:{&quot;type&quot;:&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;id&quot;:{&quot;type&quot;:&quot;string&quot;}}}}},&quot;build&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;artifact&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;group&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;name&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;version&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;}}}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/metrics">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;Datacenter&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Node&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;wan&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;NodeMeta&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;somekey&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;Service&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Service&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Tags&quot;:{&quot;type&quot;:&quot;array&quot;,&quot;items&quot;:{&quot;type&quot;:&quot;string&quot;}},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;wan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}}}},&quot;Meta&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;Port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;Check&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;SkipNodeUpdate&quot;:{&quot;type&quot;:&quot;boolean&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /actuator/shutdown">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /actuator/restart">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /api/v1/adminrouteservice/adminroute">
          <GeneratingPSM>JavaAnnotation[AnnotationName:PostMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/adminrouteservice/welcome">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="DELETE /api/v1/adminrouteservice/adminroute/{routeId}">
          <GeneratingPSM>JavaAnnotation[AnnotationName:DeleteMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/adminrouteservice/adminroute">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-admin-route-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-admin-route-service]</GeneratingPSM>
      </interface>
      <dependencies
          ConsumerOperation="createAndModifyRoute()"
          ProviderName="ts-route-service"
          ProviderDestination="Endpoint[RequestURI:POST /api/v1/routeservice/routes&quot;]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="getAllRoutes()"
          ProviderName="ts-route-service"
          ProviderDestination="Endpoint[RequestURI:GET /api/v1/routeservice/routes&quot;]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="deleteRoute()"
          ProviderName="ts-route-service"
          ProviderDestination="Endpoint[RequestURI:DELETE /api/v1/routeservice/routes/]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-admin-route-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
      <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-admin-route-service]</GeneratingPSM>
    </microservices>
    <microservices
        xsi:type="PIM:FunctionalMicroservice"
        MicroserviceName="ts-admin-travel-service">
      <container
          ContainerName="ts-admin-travel-service">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-admin-travel-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-admin-travel-service]</GeneratingPSM>
      </container>
      <components
          Category="Observability_Pattern_Application_Metrics_Generation"
          Technology="Actuator"
          Environment="COMPILE">
        <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
      </components>
      <components
          Category="Security_Pattern_Web_Security"
          Technology="Spring Security"
          Environment="COMPILE">
        <GeneratingPSM>JavaAnnotation[AnnotationName:EnableWebSecurity]</GeneratingPSM>
      </components>
      <interface
          ServerURL="[http|https]://ts-admin-travel-service:&lt;port-number>">
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/health">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;status&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;details&quot;:{&quot;type&quot;:&quot;object&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/info">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;git&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;branch&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;commit&quot;:{&quot;type&quot;:&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;id&quot;:{&quot;type&quot;:&quot;string&quot;}}}}},&quot;build&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;artifact&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;group&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;name&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;version&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;}}}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/metrics">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;Datacenter&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Node&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;wan&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;NodeMeta&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;somekey&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;Service&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Service&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Tags&quot;:{&quot;type&quot;:&quot;array&quot;,&quot;items&quot;:{&quot;type&quot;:&quot;string&quot;}},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;wan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}}}},&quot;Meta&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;Port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;Check&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;SkipNodeUpdate&quot;:{&quot;type&quot;:&quot;boolean&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /actuator/shutdown">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /actuator/restart">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/admintravelservice/welcome">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="PUT /api/v1/admintravelservice/admintravel">
          <GeneratingPSM>JavaAnnotation[AnnotationName:PutMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="DELETE /api/v1/admintravelservice/admintravel/{tripId}">
          <GeneratingPSM>JavaAnnotation[AnnotationName:DeleteMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/admintravelservice/admintravel">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /api/v1/admintravelservice/admintravel">
          <GeneratingPSM>JavaAnnotation[AnnotationName:PostMapping]</GeneratingPSM>
        </destinations>
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-admin-travel-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-admin-travel-service]</GeneratingPSM>
      </interface>
      <dependencies
          ConsumerOperation="updateTravel()"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="addTravel()"
          ProviderName=""
          ProviderDestination="Endpoint[RequestURI:POST ]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="getAllTravels()"
          ProviderName="ts-travel2-service"
          ProviderDestination="Endpoint[RequestURI:GET /api/v1/travel2service/admin_trip&quot;]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="deleteTravel()">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="getAllTravels()"
          ProviderName="ts-travel-service"
          ProviderDestination="Endpoint[RequestURI:GET /api/v1/travelservice/admin_trip&quot;]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-admin-travel-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
      <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-admin-travel-service]</GeneratingPSM>
    </microservices>
    <microservices
        xsi:type="PIM:FunctionalMicroservice"
        MicroserviceName="ts-admin-user-service">
      <container
          ContainerName="ts-admin-user-service">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-admin-user-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-admin-user-service]</GeneratingPSM>
      </container>
      <components
          Category="Observability_Pattern_Application_Metrics_Generation"
          Technology="Actuator"
          Environment="COMPILE">
        <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
      </components>
      <components
          Category="Security_Pattern_Web_Security"
          Technology="Spring Security"
          Environment="COMPILE">
        <GeneratingPSM>JavaAnnotation[AnnotationName:EnableWebSecurity]</GeneratingPSM>
      </components>
      <components
          Category="Observability_Pattern_Application_Metrics_Logging"
          Technology="Slf4j"
          Environment="COMPILE">
        <GeneratingPSM>JavaAnnotation[AnnotationName:Slf4j]</GeneratingPSM>
      </components>
      <interface
          ServerURL="[http|https]://ts-admin-user-service:&lt;port-number>">
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/health">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;status&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;details&quot;:{&quot;type&quot;:&quot;object&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/info">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;git&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;branch&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;commit&quot;:{&quot;type&quot;:&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;id&quot;:{&quot;type&quot;:&quot;string&quot;}}}}},&quot;build&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;artifact&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;group&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;name&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;version&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;}}}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/metrics">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;Datacenter&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Node&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;wan&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;NodeMeta&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;somekey&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;Service&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Service&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Tags&quot;:{&quot;type&quot;:&quot;array&quot;,&quot;items&quot;:{&quot;type&quot;:&quot;string&quot;}},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;wan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}}}},&quot;Meta&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;Port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;Check&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;SkipNodeUpdate&quot;:{&quot;type&quot;:&quot;boolean&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /actuator/shutdown">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /actuator/restart">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="DELETE /api/v1/adminuserservice/users/{userId}">
          <GeneratingPSM>JavaAnnotation[AnnotationName:DeleteMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/adminuserservice/users">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="PUT /api/v1/adminuserservice/users">
          <GeneratingPSM>JavaAnnotation[AnnotationName:PutMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /api/v1/adminuserservice/users/welcome">
          <GeneratingPSM>JavaAnnotation[AnnotationName:GetMapping]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /api/v1/adminuserservice/users">
          <GeneratingPSM>JavaAnnotation[AnnotationName:PostMapping]</GeneratingPSM>
        </destinations>
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-admin-user-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-admin-user-service]</GeneratingPSM>
      </interface>
      <dependencies
          ConsumerOperation="getAllUsers()"
          ProviderName="ts-user-service"
          ProviderDestination="Endpoint[RequestURI:GET /api/v1/userservice/users&quot;]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="addUser()"
          ProviderName="ts-user-service"
          ProviderDestination="Endpoint[RequestURI:POST /api/v1/userservice/users/register]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="deleteUser()"
          ProviderName=""
          ProviderDestination="Endpoint[RequestURI:DELETE ]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <dependencies
          ConsumerOperation="updateUser()"
          ProviderName="ts-user-service"
          ProviderDestination="Endpoint[RequestURI:PUT /api/v1/userservice/users&quot;]"
          Environment="COMPILE">
        <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
      </dependencies>
      <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-admin-user-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
      <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-admin-user-service]</GeneratingPSM>
    </microservices>
    <microservices
        MicroserviceName="jaeger">
      <container
          ContainerName="jaeger">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:jaeger,ImageField:jaegertracing/all-in-one:1.15, GeneratesLogs:false]</GeneratingPSM>
      </container>
      <interface
          ServerURL="[http|https]://jaeger:&lt;port-number>">
        <GeneratingPSM>DockerContainerDefinition[ContainerName:jaeger,ImageField:jaegertracing/all-in-one:1.15, GeneratesLogs:false]</GeneratingPSM>
      </interface>
      <GeneratingPSM>DockerContainerDefinition[ContainerName:jaeger,ImageField:jaegertracing/all-in-one:1.15, GeneratesLogs:false]</GeneratingPSM>
    </microservices>
    <microservices
        MicroserviceName="ms-monitoring-core">
      <container
          ContainerName="ms-monitoring-core">
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ms-monitoring-core]</GeneratingPSM>
      </container>
      <components
          Category="Observability_Pattern_Application_Metrics_Generation"
          Technology="Actuator"
          Environment="COMPILE">
        <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
      </components>
      <interface
          ServerURL="[http|https]://ms-monitoring-core:&lt;port-number>">
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/health">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;status&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;details&quot;:{&quot;type&quot;:&quot;object&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/info">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;git&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;branch&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;commit&quot;:{&quot;type&quot;:&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;id&quot;:{&quot;type&quot;:&quot;string&quot;}}}}},&quot;build&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;artifact&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;group&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;name&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;version&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;}}}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="GET /actuator/metrics">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;Datacenter&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Node&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;wan&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;NodeMeta&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;somekey&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;Service&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Service&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Tags&quot;:{&quot;type&quot;:&quot;array&quot;,&quot;items&quot;:{&quot;type&quot;:&quot;string&quot;}},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;wan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}}}},&quot;Meta&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;Port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;Check&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;SkipNodeUpdate&quot;:{&quot;type&quot;:&quot;boolean&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /actuator/shutdown">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <destinations
            xsi:type="PIM:Endpoint"
            Environment="COMPILE"
            RequestURI="POST /actuator/restart">
          <messages
              MessageType="RESPONSE"
              BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}"
              SchemaFormat="JSON">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </messages>
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </destinations>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ms-monitoring-core]</GeneratingPSM>
      </interface>
      <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ms-monitoring-core]</GeneratingPSM>
    </microservices>
    <GeneratingPSM>DistributedApplicationProject[ApplicationName:TrainTicket]</GeneratingPSM>
    <GeneratingPSM>ApplicationProject[ProjectArtifactId:ts-service]</GeneratingPSM>
  </architecture>
</PIM:RootPIM>